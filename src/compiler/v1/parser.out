Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    CTE_ENTERA_ERR
    CTE_REAL_ERR
    CTE_REAL_ERR2
    FIN_ERR
    INICIO_ERR
    POTENCIA_ERR
    PROGRAMA_ERR
    TIPO_ERR
    newline

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpovars -> gpoids error TIPO PUNTO_COMA gpovars
Rule 8     gpovars -> gpoids error TIPO PUNTO_COMA
Rule 9     gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
Rule 10    gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA
Rule 11    gpoids -> IDENT COMA gpoidsinner
Rule 12    gpoids -> IDENT opasig COMA gpoidsinner
Rule 13    gpoids -> IDENT dimens COMA gpoidsinner
Rule 14    gpoids -> IDENT dimens
Rule 15    gpoidsinner -> IDENT COMA gpoidsinner
Rule 16    gpoidsinner -> IDENT opasig COMA gpoidsinner
Rule 17    gpoidsinner -> IDENT
Rule 18    gpoidsinner -> IDENT dimens COMA gpoidsinner
Rule 19    gpoidsinner -> IDENT dimens
Rule 20    gpoids -> empty
Rule 21    gpoidsinner -> empty
Rule 22    gpoids -> IDENT dimens error gpoids
Rule 23    gpoids -> IDENT error gpoids
Rule 24    gpoids -> IDENT opasig error gpoids
Rule 25    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 26    dimens -> empty
Rule 27    dimens -> CORCHETE_EMPIEZA valor error dimens
Rule 28    dimens -> error valor CORCHETE_TERMINA dimens
Rule 29    opasig -> OP_ASIG CTE_ENTERA
Rule 30    opasig -> OP_ASIG IDENT
Rule 31    opasig -> empty
Rule 32    valor -> exprlog
Rule 33    constantes -> CONSTANTES gpoconst
Rule 34    constantes -> empty
Rule 35    gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 36    gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst
Rule 37    gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 38    gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst
Rule 39    gpoconst -> empty
Rule 40    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 41    protfuncproc -> empty
Rule 42    gpofuncproc -> protfunc
Rule 43    gpofuncproc -> protproc
Rule 44    gpofuncproc -> protproc gpofuncproc
Rule 45    gpofuncproc -> protfunc gpofuncproc
Rule 46    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 47    protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 48    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 49    protproc -> empty
Rule 50    protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 51    params -> gpopars PUNTOS_DOBLES TIPO params2
Rule 52    params -> empty
Rule 53    params -> gpopars PUNTOS_DOBLES error params2
Rule 54    params -> gpopars error TIPO params2
Rule 55    params2 -> PUNTO_COMA params
Rule 56    params2 -> empty
Rule 57    gpopars -> IDENT COMA gpopars2
Rule 58    gpopars -> IDENT
Rule 59    gpopars2 -> IDENT COMA gpopars2
Rule 60    gpopars2 -> IDENT
Rule 61    funcproc -> procedimiento funcproc
Rule 62    funcproc -> funcion funcproc
Rule 63    funcproc -> empty
Rule 64    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 65    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 66    block -> estatuto PUNTO_COMA block
Rule 67    block -> estatuto PUNTO_COMA
Rule 68    block -> estatuto error
Rule 69    block -> estatuto error block
Rule 70    estatuto -> si
Rule 71    estatuto -> lfunc
Rule 72    estatuto -> LIMPIA
Rule 73    estatuto -> desde
Rule 74    estatuto -> repetir
Rule 75    estatuto -> mientras
Rule 76    estatuto -> cuando
Rule 77    estatuto -> regresa
Rule 78    estatuto -> asigna
Rule 79    estatuto -> imprime
Rule 80    estatuto -> imprimenl
Rule 81    estatuto -> lee
Rule 82    estatuto -> INTERRUMPE
Rule 83    estatuto -> CONTINUA
Rule 84    estatuto -> empty
Rule 85    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 86    sino -> SINO bckesp
Rule 87    sino -> empty
Rule 88    bckesp -> estatuto
Rule 89    bckesp -> INICIO block FIN
Rule 90    bckesp -> empty
Rule 91    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 92    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 93    desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp
Rule 94    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 95    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 96    asigna -> IDENT udim OP_ASIG exprlog
Rule 97    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 98    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 99    otro -> empty
Rule 100   gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 101   gposea -> empty
Rule 102   gpoconst -> CTE_ALFA gpoconst2
Rule 103   gpoconst3 -> CTE_ALFA gpoconst2
Rule 104   gpoconst2 -> COMA gpoconst3
Rule 105   gpoconst2 -> empty
Rule 106   regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 107   udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
Rule 108   udim -> empty
Rule 109   exprlog -> opy
Rule 110   exprlog -> opy O exprlog
Rule 111   opy -> opno
Rule 112   opy -> opno Y opy
Rule 113   opno -> oprel
Rule 114   opno -> NO oprel
Rule 115   oprel -> expr
Rule 116   oprel -> expr OP_REL oprel
Rule 117   expr -> multi
Rule 118   expr -> multi MAS expr
Rule 119   expr -> multi MENOS expr
Rule 120   multi -> expo
Rule 121   multi -> expo MULTI multi
Rule 122   multi -> expo DIV multi
Rule 123   multi -> expo MOD multi
Rule 124   multi -> empty
Rule 125   expo -> signo
Rule 126   expo -> signo POTENCIA expo
Rule 127   signo -> termino
Rule 128   signo -> MENOS termino
Rule 129   termino -> IDENT
Rule 130   termino -> CTE_ENTERA
Rule 131   termino -> CTE_REAL
Rule 132   termino -> CTE_ALFA
Rule 133   termino -> VERDADERO
Rule 134   termino -> FALSO
Rule 135   termino -> <empty>
Rule 136   termino -> IDENT udim
Rule 137   termino -> lfunc
Rule 138   lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
Rule 139   lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA
Rule 140   imprime -> IMPRIME begin gpoexp PAREN_TERMINA
Rule 141   begin -> PAREN_EMPIEZA
Rule 142   imprime -> IMPRIME error gpoexp PAREN_TERMINA
Rule 143   imprime -> IMPRIME begin gpoexp error
Rule 144   imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA
Rule 145   imprimenl -> IMPRIMENL begin gpoexp error
Rule 146   imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA
Rule 147   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 148   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 149   gpoexp -> exprlog
Rule 150   gpoexp -> exprlog COMA gpoexp
Rule 151   uparams -> exprlog
Rule 152   uparams -> exprlog COMA uparams
Rule 153   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 11 12 13 15 16 18 57 59 104 150 152
COMENTARIO           : 
CONSTANTES           : 33
CONTINUA             : 83
CORCHETE_EMPIEZA     : 25 27 107
CORCHETE_TERMINA     : 25 28 107
CTE_ALFA             : 102 103 132
CTE_ENTERA           : 29 35 36 91 92 130
CTE_ENTERA_ERR       : 
CTE_REAL             : 37 38 131
CTE_REAL_ERR         : 
CTE_REAL_ERR2        : 
CUANDO               : 97
CUMPLA               : 95
DE                   : 1 40 64 65 91 92 93 97
DECR                 : 91
DESDE                : 91 92 93
DIV                  : 122
EL                   : 91 92 93 97
FALSO                : 134
FIN                  : 1 40 64 65 89 97
FIN_ERR              : 
FUNCION              : 46 47 65 65
HACER                : 85
HASTA                : 91 92 93 94
IDENT                : 11 12 13 14 15 16 17 18 19 22 23 24 30 35 36 37 38 46 48 57 58 59 60 64 65 96 97 129 136 138 139 147 148
IMPRIME              : 140 142 143
IMPRIMENL            : 144 145 146
INCR                 : 92
INICIO               : 64 65 89 97
INICIO_ERR           : 
INTERRUMPE           : 82
LEE                  : 147 148
LIMPIA               : 72
MAS                  : 118
MENOS                : 119 128
MIENTRAS             : 95
MOD                  : 123
MULTI                : 121
NO                   : 114
O                    : 110
OP_ASIG              : 29 30 35 36 37 38 96
OP_REL               : 116
OTRO                 : 98
PAREN_EMPIEZA        : 46 47 48 50 64 65 85 94 106 138 139 141 147 148
PAREN_TERMINA        : 46 47 48 50 64 65 85 94 106 138 139 140 142 144 146 147 148
POTENCIA             : 126
POTENCIA_ERR         : 
PROCEDIMIENTO        : 48 50 64 64
PROGRAMA             : 1 1
PROGRAMA_ERR         : 
PROTOTIPOS           : 40 40
PUNTO                : 1
PUNTOS_DOBLES        : 4 5 9 10 46 47 51 53 65 98 100
PUNTO_COMA           : 4 5 7 8 9 10 35 36 37 38 40 46 47 48 50 55 64 65 66 67
QUE                  : 94 95
REGRESA              : 106
REPETIR              : 94
SE                   : 95
SEA                  : 100
SI                   : 85
SINO                 : 86
TIPO                 : 4 5 7 8 46 47 51 54 65
TIPO_ERR             : 
VALOR                : 91 92 93 97
VARIABLES            : 2
VERDADERO            : 133
Y                    : 112
error                : 7 8 9 10 22 23 24 27 28 47 50 53 54 68 69 93 139 142 143 145 146
newline              : 

Nonterminals, with rules where they appear

asigna               : 78 91 92 93
bckesp               : 85 86 91 92 93 95 98 100
begin                : 140 143 144 145
block                : 1 64 65 66 69 89 94
constantes           : 1
cuando               : 76
desde                : 73
dimens               : 13 14 18 19 22 25 27 28 148
empty                : 3 6 20 21 26 31 34 39 41 49 52 56 63 84 87 90 99 101 105 108 124
estatuto             : 66 67 68 69 88
expo                 : 120 121 122 123 126
expr                 : 91 92 93 107 115 116 118 119
exprlog              : 32 85 94 95 96 106 110 149 150 151 152
funcion              : 62
funcproc             : 1 61 62
gpoconst             : 33 36 38 100
gpoconst2            : 102 103
gpoconst3            : 104
gpoexp               : 140 142 143 144 145 146 150
gpofuncproc          : 40 44 45
gpoids               : 4 5 7 8 9 10 22 23 24
gpoidsinner          : 11 12 13 15 16 18
gpopars              : 51 53 54
gpopars2             : 57 59
gposea               : 97 100
gpovars              : 2 4 7 9
imprime              : 79
imprimenl            : 80
lee                  : 81
lfunc                : 71 137
mientras             : 75
multi                : 117 118 119 121 122 123
opasig               : 12 16 24
opno                 : 111 112
oprel                : 113 114 116
opy                  : 109 110 112
otro                 : 97
params               : 46 47 48 50 55 64 65
params2              : 51 53 54
procedimiento        : 61
program              : 0
protfunc             : 42 45
protfuncproc         : 1
protproc             : 43 44
regresa              : 77
repetir              : 74
si                   : 70
signo                : 125 126
sino                 : 85
termino              : 127 128
udim                 : 96 107 136
uparams              : 138 152
valor                : 25 27 28
variables            : 1 64 65

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (33) constantes -> . CONSTANTES gpoconst
    (34) constantes -> . empty
    (153) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 153 (empty -> .)
    PROTOTIPOS      reduce using rule 153 (empty -> .)
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (153) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 153 (empty -> .)
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (33) constantes -> CONSTANTES . gpoconst
    (35) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (36) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst
    (37) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (38) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst
    (39) gpoconst -> . empty
    (102) gpoconst -> . CTE_ALFA gpoconst2
    (153) empty -> .

    IDENT           shift and go to state 9
    CTE_ALFA        shift and go to state 11
    VARIABLES       reduce using rule 153 (empty -> .)
    PROTOTIPOS      reduce using rule 153 (empty -> .)
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)

    gpoconst                       shift and go to state 8
    empty                          shift and go to state 10

state 4

    (34) constantes -> empty .

    VARIABLES       reduce using rule 34 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 34 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 34 (constantes -> empty .)
    FUNCION         reduce using rule 34 (constantes -> empty .)
    PROGRAMA        reduce using rule 34 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (40) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (41) protfuncproc -> . empty
    (153) empty -> .

    PROTOTIPOS      shift and go to state 13
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)

    protfuncproc                   shift and go to state 12
    empty                          shift and go to state 14

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (153) empty -> .

    IDENT           shift and go to state 18
    PROTOTIPOS      reduce using rule 153 (empty -> .)
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)
    INICIO          reduce using rule 153 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpovars                        shift and go to state 15
    gpoids                         shift and go to state 16
    empty                          shift and go to state 17

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (33) constantes -> CONSTANTES gpoconst .

    VARIABLES       reduce using rule 33 (constantes -> CONSTANTES gpoconst .)
    PROTOTIPOS      reduce using rule 33 (constantes -> CONSTANTES gpoconst .)
    PROCEDIMIENTO   reduce using rule 33 (constantes -> CONSTANTES gpoconst .)
    FUNCION         reduce using rule 33 (constantes -> CONSTANTES gpoconst .)
    PROGRAMA        reduce using rule 33 (constantes -> CONSTANTES gpoconst .)


state 9

    (35) gpoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (36) gpoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst
    (37) gpoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (38) gpoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA gpoconst

    OP_ASIG         shift and go to state 19


state 10

    (39) gpoconst -> empty .

    VARIABLES       reduce using rule 39 (gpoconst -> empty .)
    PROTOTIPOS      reduce using rule 39 (gpoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 39 (gpoconst -> empty .)
    FUNCION         reduce using rule 39 (gpoconst -> empty .)
    PROGRAMA        reduce using rule 39 (gpoconst -> empty .)
    PUNTOS_DOBLES   reduce using rule 39 (gpoconst -> empty .)


state 11

    (102) gpoconst -> CTE_ALFA . gpoconst2
    (104) gpoconst2 -> . COMA gpoconst3
    (105) gpoconst2 -> . empty
    (153) empty -> .

    COMA            shift and go to state 21
    VARIABLES       reduce using rule 153 (empty -> .)
    PROTOTIPOS      reduce using rule 153 (empty -> .)
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)

    gpoconst2                      shift and go to state 20
    empty                          shift and go to state 22

state 12

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (61) funcproc -> . procedimiento funcproc
    (62) funcproc -> . funcion funcproc
    (63) funcproc -> . empty
    (64) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (65) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (153) empty -> .

    PROCEDIMIENTO   shift and go to state 27
    FUNCION         shift and go to state 28
    PROGRAMA        reduce using rule 153 (empty -> .)

    funcproc                       shift and go to state 23
    procedimiento                  shift and go to state 24
    funcion                        shift and go to state 25
    empty                          shift and go to state 26

state 13

    (40) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (42) gpofuncproc -> . protfunc
    (43) gpofuncproc -> . protproc
    (44) gpofuncproc -> . protproc gpofuncproc
    (45) gpofuncproc -> . protfunc gpofuncproc
    (46) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (48) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (49) protproc -> . empty
    (50) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (153) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 32
    PROCEDIMIENTO   shift and go to state 33
    FIN             reduce using rule 153 (empty -> .)

  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]

    gpofuncproc                    shift and go to state 29
    protfunc                       shift and go to state 30
    protproc                       shift and go to state 31
    empty                          shift and go to state 34

state 14

    (41) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 41 (protfuncproc -> empty .)
    FUNCION         reduce using rule 41 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 41 (protfuncproc -> empty .)


state 15

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 16

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA
    (7) gpovars -> gpoids . error TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids . error TIPO PUNTO_COMA
    (9) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 35
    error           shift and go to state 36


state 17

    (6) gpovars -> empty .
    (20) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 20 (gpoids -> empty .)
    error           reduce using rule 20 (gpoids -> empty .)


state 18

    (11) gpoids -> IDENT . COMA gpoidsinner
    (12) gpoids -> IDENT . opasig COMA gpoidsinner
    (13) gpoids -> IDENT . dimens COMA gpoidsinner
    (14) gpoids -> IDENT . dimens
    (22) gpoids -> IDENT . dimens error gpoids
    (23) gpoids -> IDENT . error gpoids
    (24) gpoids -> IDENT . opasig error gpoids
    (29) opasig -> . OP_ASIG CTE_ENTERA
    (30) opasig -> . OP_ASIG IDENT
    (31) opasig -> . empty
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (153) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
    COMA            shift and go to state 37
    error           shift and go to state 40
    OP_ASIG         shift and go to state 41
    CORCHETE_EMPIEZA shift and go to state 43
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)

  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]

    opasig                         shift and go to state 38
    dimens                         shift and go to state 39
    empty                          shift and go to state 42

state 19

    (35) gpoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (36) gpoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA gpoconst
    (37) gpoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (38) gpoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA gpoconst

    CTE_ENTERA      shift and go to state 44
    CTE_REAL        shift and go to state 45


state 20

    (102) gpoconst -> CTE_ALFA gpoconst2 .

    VARIABLES       reduce using rule 102 (gpoconst -> CTE_ALFA gpoconst2 .)
    PROTOTIPOS      reduce using rule 102 (gpoconst -> CTE_ALFA gpoconst2 .)
    PROCEDIMIENTO   reduce using rule 102 (gpoconst -> CTE_ALFA gpoconst2 .)
    FUNCION         reduce using rule 102 (gpoconst -> CTE_ALFA gpoconst2 .)
    PROGRAMA        reduce using rule 102 (gpoconst -> CTE_ALFA gpoconst2 .)
    PUNTOS_DOBLES   reduce using rule 102 (gpoconst -> CTE_ALFA gpoconst2 .)


state 21

    (104) gpoconst2 -> COMA . gpoconst3
    (103) gpoconst3 -> . CTE_ALFA gpoconst2

    CTE_ALFA        shift and go to state 47

    gpoconst3                      shift and go to state 46

state 22

    (105) gpoconst2 -> empty .

    VARIABLES       reduce using rule 105 (gpoconst2 -> empty .)
    PROTOTIPOS      reduce using rule 105 (gpoconst2 -> empty .)
    PROCEDIMIENTO   reduce using rule 105 (gpoconst2 -> empty .)
    FUNCION         reduce using rule 105 (gpoconst2 -> empty .)
    PROGRAMA        reduce using rule 105 (gpoconst2 -> empty .)
    PUNTOS_DOBLES   reduce using rule 105 (gpoconst2 -> empty .)


state 23

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA PUNTO

    PROGRAMA        shift and go to state 48


state 24

    (61) funcproc -> procedimiento . funcproc
    (61) funcproc -> . procedimiento funcproc
    (62) funcproc -> . funcion funcproc
    (63) funcproc -> . empty
    (64) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (65) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (153) empty -> .

    PROCEDIMIENTO   shift and go to state 27
    FUNCION         shift and go to state 28
    PROGRAMA        reduce using rule 153 (empty -> .)

    procedimiento                  shift and go to state 24
    funcproc                       shift and go to state 49
    funcion                        shift and go to state 25
    empty                          shift and go to state 26

state 25

    (62) funcproc -> funcion . funcproc
    (61) funcproc -> . procedimiento funcproc
    (62) funcproc -> . funcion funcproc
    (63) funcproc -> . empty
    (64) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (65) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (153) empty -> .

    PROCEDIMIENTO   shift and go to state 27
    FUNCION         shift and go to state 28
    PROGRAMA        reduce using rule 153 (empty -> .)

    funcion                        shift and go to state 25
    funcproc                       shift and go to state 50
    procedimiento                  shift and go to state 24
    empty                          shift and go to state 26

state 26

    (63) funcproc -> empty .

    PROGRAMA        reduce using rule 63 (funcproc -> empty .)


state 27

    (64) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 51


state 28

    (65) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 52


state 29

    (40) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 53


state 30

    (42) gpofuncproc -> protfunc .
    (45) gpofuncproc -> protfunc . gpofuncproc
    (42) gpofuncproc -> . protfunc
    (43) gpofuncproc -> . protproc
    (44) gpofuncproc -> . protproc gpofuncproc
    (45) gpofuncproc -> . protfunc gpofuncproc
    (46) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (48) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (49) protproc -> . empty
    (50) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (153) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 42 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 42 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 32
    PROCEDIMIENTO   shift and go to state 33

  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]

    protfunc                       shift and go to state 30
    gpofuncproc                    shift and go to state 54
    protproc                       shift and go to state 31
    empty                          shift and go to state 34

state 31

    (43) gpofuncproc -> protproc .
    (44) gpofuncproc -> protproc . gpofuncproc
    (42) gpofuncproc -> . protfunc
    (43) gpofuncproc -> . protproc
    (44) gpofuncproc -> . protproc gpofuncproc
    (45) gpofuncproc -> . protfunc gpofuncproc
    (46) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (48) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (49) protproc -> . empty
    (50) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (153) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 43 (gpofuncproc -> protproc .)
    FIN             reduce using rule 43 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 32
    PROCEDIMIENTO   shift and go to state 33

  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]

    protproc                       shift and go to state 31
    gpofuncproc                    shift and go to state 55
    protfunc                       shift and go to state 30
    empty                          shift and go to state 34

state 32

    (46) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protfunc -> FUNCION . error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 56
    error           shift and go to state 57


state 33

    (48) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (50) protproc -> PROCEDIMIENTO . error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 58
    error           shift and go to state 59


state 34

    (49) protproc -> empty .

    FUNCION         reduce using rule 49 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 49 (protproc -> empty .)
    FIN             reduce using rule 49 (protproc -> empty .)


state 35

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA
    (9) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA

    TIPO            shift and go to state 60
    error           shift and go to state 61


state 36

    (7) gpovars -> gpoids error . TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids error . TIPO PUNTO_COMA

    TIPO            shift and go to state 62


state 37

    (11) gpoids -> IDENT COMA . gpoidsinner
    (15) gpoidsinner -> . IDENT COMA gpoidsinner
    (16) gpoidsinner -> . IDENT opasig COMA gpoidsinner
    (17) gpoidsinner -> . IDENT
    (18) gpoidsinner -> . IDENT dimens COMA gpoidsinner
    (19) gpoidsinner -> . IDENT dimens
    (21) gpoidsinner -> . empty
    (153) empty -> .

    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoidsinner                    shift and go to state 64
    empty                          shift and go to state 65

state 38

    (12) gpoids -> IDENT opasig . COMA gpoidsinner
    (24) gpoids -> IDENT opasig . error gpoids

    COMA            shift and go to state 66
    error           shift and go to state 67


state 39

    (13) gpoids -> IDENT dimens . COMA gpoidsinner
    (14) gpoids -> IDENT dimens .
    (22) gpoids -> IDENT dimens . error gpoids

    COMA            shift and go to state 68
    PUNTOS_DOBLES   reduce using rule 14 (gpoids -> IDENT dimens .)
    error           reduce using rule 14 (gpoids -> IDENT dimens .)

  ! error           [ shift and go to state 69 ]


state 40

    (23) gpoids -> IDENT error . gpoids
    (28) dimens -> error . valor CORCHETE_TERMINA dimens
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (32) valor -> . exprlog
    (153) empty -> .
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
    IDENT           shift and go to state 70
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    gpoids                         shift and go to state 71
    valor                          shift and go to state 72
    empty                          shift and go to state 73
    exprlog                        shift and go to state 74
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 41

    (29) opasig -> OP_ASIG . CTE_ENTERA
    (30) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 91
    IDENT           shift and go to state 92


state 42

    (31) opasig -> empty .
    (26) dimens -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 26 (dimens -> empty .)
  ! reduce/reduce conflict for error resolved using rule 26 (dimens -> empty .)
    COMA            reduce using rule 26 (dimens -> empty .)
    error           reduce using rule 26 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 26 (dimens -> empty .)

  ! COMA            [ reduce using rule 31 (opasig -> empty .) ]
  ! error           [ reduce using rule 31 (opasig -> empty .) ]


state 43

    (25) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (27) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (32) valor -> . exprlog
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    valor                          shift and go to state 93
    exprlog                        shift and go to state 74
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 44

    (35) gpoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (36) gpoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA gpoconst

    PUNTO_COMA      shift and go to state 96


state 45

    (37) gpoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (38) gpoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA gpoconst

    PUNTO_COMA      shift and go to state 97


state 46

    (104) gpoconst2 -> COMA gpoconst3 .

    VARIABLES       reduce using rule 104 (gpoconst2 -> COMA gpoconst3 .)
    PROTOTIPOS      reduce using rule 104 (gpoconst2 -> COMA gpoconst3 .)
    PROCEDIMIENTO   reduce using rule 104 (gpoconst2 -> COMA gpoconst3 .)
    FUNCION         reduce using rule 104 (gpoconst2 -> COMA gpoconst3 .)
    PROGRAMA        reduce using rule 104 (gpoconst2 -> COMA gpoconst3 .)
    PUNTOS_DOBLES   reduce using rule 104 (gpoconst2 -> COMA gpoconst3 .)


state 47

    (103) gpoconst3 -> CTE_ALFA . gpoconst2
    (104) gpoconst2 -> . COMA gpoconst3
    (105) gpoconst2 -> . empty
    (153) empty -> .

    COMA            shift and go to state 21
    VARIABLES       reduce using rule 153 (empty -> .)
    PROTOTIPOS      reduce using rule 153 (empty -> .)
    PROCEDIMIENTO   reduce using rule 153 (empty -> .)
    FUNCION         reduce using rule 153 (empty -> .)
    PROGRAMA        reduce using rule 153 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)

    gpoconst2                      shift and go to state 98
    empty                          shift and go to state 22

state 48

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA PUNTO
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    block                          shift and go to state 99
    estatuto                       shift and go to state 100
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 49

    (61) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 61 (funcproc -> procedimiento funcproc .)


state 50

    (62) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 62 (funcproc -> funcion funcproc .)


state 51

    (64) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 126


state 52

    (65) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 127


state 53

    (40) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 128


state 54

    (45) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 45 (gpofuncproc -> protfunc gpofuncproc .)


state 55

    (44) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 44 (gpofuncproc -> protproc gpofuncproc .)


state 56

    (46) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 129


state 57

    (47) protfunc -> FUNCION error . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 130


state 58

    (48) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 131


state 59

    (50) protproc -> PROCEDIMIENTO error . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 132


state 60

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 133


state 61

    (9) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA

    PUNTO_COMA      shift and go to state 134


state 62

    (7) gpovars -> gpoids error TIPO . PUNTO_COMA gpovars
    (8) gpovars -> gpoids error TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 135


state 63

    (15) gpoidsinner -> IDENT . COMA gpoidsinner
    (16) gpoidsinner -> IDENT . opasig COMA gpoidsinner
    (17) gpoidsinner -> IDENT .
    (18) gpoidsinner -> IDENT . dimens COMA gpoidsinner
    (19) gpoidsinner -> IDENT . dimens
    (29) opasig -> . OP_ASIG CTE_ENTERA
    (30) opasig -> . OP_ASIG IDENT
    (31) opasig -> . empty
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (153) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 17 (gpoidsinner -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 17 (gpoidsinner -> IDENT .)
    COMA            shift and go to state 136
    PUNTOS_DOBLES   reduce using rule 17 (gpoidsinner -> IDENT .)
    error           reduce using rule 17 (gpoidsinner -> IDENT .)
    OP_ASIG         shift and go to state 41
    CORCHETE_EMPIEZA shift and go to state 43

  ! error           [ shift and go to state 139 ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]

    opasig                         shift and go to state 137
    dimens                         shift and go to state 138
    empty                          shift and go to state 42

state 64

    (11) gpoids -> IDENT COMA gpoidsinner .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> IDENT COMA gpoidsinner .)
    error           reduce using rule 11 (gpoids -> IDENT COMA gpoidsinner .)


state 65

    (21) gpoidsinner -> empty .

    PUNTOS_DOBLES   reduce using rule 21 (gpoidsinner -> empty .)
    error           reduce using rule 21 (gpoidsinner -> empty .)


state 66

    (12) gpoids -> IDENT opasig COMA . gpoidsinner
    (15) gpoidsinner -> . IDENT COMA gpoidsinner
    (16) gpoidsinner -> . IDENT opasig COMA gpoidsinner
    (17) gpoidsinner -> . IDENT
    (18) gpoidsinner -> . IDENT dimens COMA gpoidsinner
    (19) gpoidsinner -> . IDENT dimens
    (21) gpoidsinner -> . empty
    (153) empty -> .

    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoidsinner                    shift and go to state 140
    empty                          shift and go to state 65

state 67

    (24) gpoids -> IDENT opasig error . gpoids
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (153) empty -> .

    IDENT           shift and go to state 18
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoids                         shift and go to state 141
    empty                          shift and go to state 142

state 68

    (13) gpoids -> IDENT dimens COMA . gpoidsinner
    (15) gpoidsinner -> . IDENT COMA gpoidsinner
    (16) gpoidsinner -> . IDENT opasig COMA gpoidsinner
    (17) gpoidsinner -> . IDENT
    (18) gpoidsinner -> . IDENT dimens COMA gpoidsinner
    (19) gpoidsinner -> . IDENT dimens
    (21) gpoidsinner -> . empty
    (153) empty -> .

    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoidsinner                    shift and go to state 143
    empty                          shift and go to state 65

state 69

    (22) gpoids -> IDENT dimens error . gpoids
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (153) empty -> .

    IDENT           shift and go to state 18
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoids                         shift and go to state 144
    empty                          shift and go to state 142

state 70

    (11) gpoids -> IDENT . COMA gpoidsinner
    (12) gpoids -> IDENT . opasig COMA gpoidsinner
    (13) gpoids -> IDENT . dimens COMA gpoidsinner
    (14) gpoids -> IDENT . dimens
    (22) gpoids -> IDENT . dimens error gpoids
    (23) gpoids -> IDENT . error gpoids
    (24) gpoids -> IDENT . opasig error gpoids
    (129) termino -> IDENT .
    (136) termino -> IDENT . udim
    (138) lfunc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> IDENT . PAREN_EMPIEZA error PAREN_TERMINA
    (29) opasig -> . OP_ASIG CTE_ENTERA
    (30) opasig -> . OP_ASIG IDENT
    (31) opasig -> . empty
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (107) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (108) udim -> . empty
    (153) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 129 (termino -> IDENT .)
    COMA            shift and go to state 37
    error           shift and go to state 40
    POTENCIA        reduce using rule 129 (termino -> IDENT .)
    MULTI           reduce using rule 129 (termino -> IDENT .)
    DIV             reduce using rule 129 (termino -> IDENT .)
    MOD             reduce using rule 129 (termino -> IDENT .)
    MAS             reduce using rule 129 (termino -> IDENT .)
    MENOS           reduce using rule 129 (termino -> IDENT .)
    OP_REL          reduce using rule 129 (termino -> IDENT .)
    Y               reduce using rule 129 (termino -> IDENT .)
    O               reduce using rule 129 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 129 (termino -> IDENT .)
    PAREN_EMPIEZA   shift and go to state 146
    OP_ASIG         shift and go to state 41
    CORCHETE_EMPIEZA shift and go to state 148
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)

  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 153 (empty -> .) ]
  ! MULTI           [ reduce using rule 153 (empty -> .) ]
  ! DIV             [ reduce using rule 153 (empty -> .) ]
  ! MOD             [ reduce using rule 153 (empty -> .) ]
  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]

    opasig                         shift and go to state 38
    dimens                         shift and go to state 39
    udim                           shift and go to state 145
    empty                          shift and go to state 147

state 71

    (23) gpoids -> IDENT error gpoids .

    PUNTOS_DOBLES   reduce using rule 23 (gpoids -> IDENT error gpoids .)
    error           reduce using rule 23 (gpoids -> IDENT error gpoids .)


state 72

    (28) dimens -> error valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 149


state 73

    (20) gpoids -> empty .
    (124) multi -> empty .

    PUNTOS_DOBLES   reduce using rule 20 (gpoids -> empty .)
    error           reduce using rule 20 (gpoids -> empty .)
    MAS             reduce using rule 124 (multi -> empty .)
    MENOS           reduce using rule 124 (multi -> empty .)
    OP_REL          reduce using rule 124 (multi -> empty .)
    Y               reduce using rule 124 (multi -> empty .)
    O               reduce using rule 124 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 124 (multi -> empty .)


state 74

    (32) valor -> exprlog .

    CORCHETE_TERMINA reduce using rule 32 (valor -> exprlog .)
    error           reduce using rule 32 (valor -> exprlog .)


state 75

    (109) exprlog -> opy .
    (110) exprlog -> opy . O exprlog

    CORCHETE_TERMINA reduce using rule 109 (exprlog -> opy .)
    error           reduce using rule 109 (exprlog -> opy .)
    COMA            reduce using rule 109 (exprlog -> opy .)
    PAREN_TERMINA   reduce using rule 109 (exprlog -> opy .)
    PUNTO_COMA      reduce using rule 109 (exprlog -> opy .)
    HASTA           reduce using rule 109 (exprlog -> opy .)
    SINO            reduce using rule 109 (exprlog -> opy .)
    FIN             reduce using rule 109 (exprlog -> opy .)
    SEA             reduce using rule 109 (exprlog -> opy .)
    OTRO            reduce using rule 109 (exprlog -> opy .)
    INICIO          reduce using rule 109 (exprlog -> opy .)
    LIMPIA          reduce using rule 109 (exprlog -> opy .)
    INTERRUMPE      reduce using rule 109 (exprlog -> opy .)
    CONTINUA        reduce using rule 109 (exprlog -> opy .)
    SI              reduce using rule 109 (exprlog -> opy .)
    IDENT           reduce using rule 109 (exprlog -> opy .)
    DESDE           reduce using rule 109 (exprlog -> opy .)
    REPETIR         reduce using rule 109 (exprlog -> opy .)
    MIENTRAS        reduce using rule 109 (exprlog -> opy .)
    CUANDO          reduce using rule 109 (exprlog -> opy .)
    REGRESA         reduce using rule 109 (exprlog -> opy .)
    IMPRIME         reduce using rule 109 (exprlog -> opy .)
    IMPRIMENL       reduce using rule 109 (exprlog -> opy .)
    LEE             reduce using rule 109 (exprlog -> opy .)
    O               shift and go to state 150


state 76

    (111) opy -> opno .
    (112) opy -> opno . Y opy

    O               reduce using rule 111 (opy -> opno .)
    CORCHETE_TERMINA reduce using rule 111 (opy -> opno .)
    error           reduce using rule 111 (opy -> opno .)
    COMA            reduce using rule 111 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 111 (opy -> opno .)
    PUNTO_COMA      reduce using rule 111 (opy -> opno .)
    HASTA           reduce using rule 111 (opy -> opno .)
    SINO            reduce using rule 111 (opy -> opno .)
    FIN             reduce using rule 111 (opy -> opno .)
    SEA             reduce using rule 111 (opy -> opno .)
    OTRO            reduce using rule 111 (opy -> opno .)
    INICIO          reduce using rule 111 (opy -> opno .)
    LIMPIA          reduce using rule 111 (opy -> opno .)
    INTERRUMPE      reduce using rule 111 (opy -> opno .)
    CONTINUA        reduce using rule 111 (opy -> opno .)
    SI              reduce using rule 111 (opy -> opno .)
    IDENT           reduce using rule 111 (opy -> opno .)
    DESDE           reduce using rule 111 (opy -> opno .)
    REPETIR         reduce using rule 111 (opy -> opno .)
    MIENTRAS        reduce using rule 111 (opy -> opno .)
    CUANDO          reduce using rule 111 (opy -> opno .)
    REGRESA         reduce using rule 111 (opy -> opno .)
    IMPRIME         reduce using rule 111 (opy -> opno .)
    IMPRIMENL       reduce using rule 111 (opy -> opno .)
    LEE             reduce using rule 111 (opy -> opno .)
    Y               shift and go to state 151


state 77

    (113) opno -> oprel .

    Y               reduce using rule 113 (opno -> oprel .)
    O               reduce using rule 113 (opno -> oprel .)
    CORCHETE_TERMINA reduce using rule 113 (opno -> oprel .)
    error           reduce using rule 113 (opno -> oprel .)
    COMA            reduce using rule 113 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 113 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 113 (opno -> oprel .)
    HASTA           reduce using rule 113 (opno -> oprel .)
    SINO            reduce using rule 113 (opno -> oprel .)
    FIN             reduce using rule 113 (opno -> oprel .)
    SEA             reduce using rule 113 (opno -> oprel .)
    OTRO            reduce using rule 113 (opno -> oprel .)
    INICIO          reduce using rule 113 (opno -> oprel .)
    LIMPIA          reduce using rule 113 (opno -> oprel .)
    INTERRUMPE      reduce using rule 113 (opno -> oprel .)
    CONTINUA        reduce using rule 113 (opno -> oprel .)
    SI              reduce using rule 113 (opno -> oprel .)
    IDENT           reduce using rule 113 (opno -> oprel .)
    DESDE           reduce using rule 113 (opno -> oprel .)
    REPETIR         reduce using rule 113 (opno -> oprel .)
    MIENTRAS        reduce using rule 113 (opno -> oprel .)
    CUANDO          reduce using rule 113 (opno -> oprel .)
    REGRESA         reduce using rule 113 (opno -> oprel .)
    IMPRIME         reduce using rule 113 (opno -> oprel .)
    IMPRIMENL       reduce using rule 113 (opno -> oprel .)
    LEE             reduce using rule 113 (opno -> oprel .)


state 78

    (114) opno -> NO . oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    oprel                          shift and go to state 152
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 79

    (115) oprel -> expr .
    (116) oprel -> expr . OP_REL oprel

    Y               reduce using rule 115 (oprel -> expr .)
    O               reduce using rule 115 (oprel -> expr .)
    CORCHETE_TERMINA reduce using rule 115 (oprel -> expr .)
    error           reduce using rule 115 (oprel -> expr .)
    COMA            reduce using rule 115 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 115 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 115 (oprel -> expr .)
    HASTA           reduce using rule 115 (oprel -> expr .)
    SINO            reduce using rule 115 (oprel -> expr .)
    FIN             reduce using rule 115 (oprel -> expr .)
    SEA             reduce using rule 115 (oprel -> expr .)
    OTRO            reduce using rule 115 (oprel -> expr .)
    INICIO          reduce using rule 115 (oprel -> expr .)
    LIMPIA          reduce using rule 115 (oprel -> expr .)
    INTERRUMPE      reduce using rule 115 (oprel -> expr .)
    CONTINUA        reduce using rule 115 (oprel -> expr .)
    SI              reduce using rule 115 (oprel -> expr .)
    IDENT           reduce using rule 115 (oprel -> expr .)
    DESDE           reduce using rule 115 (oprel -> expr .)
    REPETIR         reduce using rule 115 (oprel -> expr .)
    MIENTRAS        reduce using rule 115 (oprel -> expr .)
    CUANDO          reduce using rule 115 (oprel -> expr .)
    REGRESA         reduce using rule 115 (oprel -> expr .)
    IMPRIME         reduce using rule 115 (oprel -> expr .)
    IMPRIMENL       reduce using rule 115 (oprel -> expr .)
    LEE             reduce using rule 115 (oprel -> expr .)
    OP_REL          shift and go to state 153


state 80

    (117) expr -> multi .
    (118) expr -> multi . MAS expr
    (119) expr -> multi . MENOS expr

    OP_REL          reduce using rule 117 (expr -> multi .)
    Y               reduce using rule 117 (expr -> multi .)
    O               reduce using rule 117 (expr -> multi .)
    CORCHETE_TERMINA reduce using rule 117 (expr -> multi .)
    error           reduce using rule 117 (expr -> multi .)
    COMA            reduce using rule 117 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 117 (expr -> multi .)
    PUNTO_COMA      reduce using rule 117 (expr -> multi .)
    HASTA           reduce using rule 117 (expr -> multi .)
    SINO            reduce using rule 117 (expr -> multi .)
    FIN             reduce using rule 117 (expr -> multi .)
    SEA             reduce using rule 117 (expr -> multi .)
    OTRO            reduce using rule 117 (expr -> multi .)
    INICIO          reduce using rule 117 (expr -> multi .)
    LIMPIA          reduce using rule 117 (expr -> multi .)
    INTERRUMPE      reduce using rule 117 (expr -> multi .)
    CONTINUA        reduce using rule 117 (expr -> multi .)
    SI              reduce using rule 117 (expr -> multi .)
    IDENT           reduce using rule 117 (expr -> multi .)
    DESDE           reduce using rule 117 (expr -> multi .)
    REPETIR         reduce using rule 117 (expr -> multi .)
    MIENTRAS        reduce using rule 117 (expr -> multi .)
    CUANDO          reduce using rule 117 (expr -> multi .)
    REGRESA         reduce using rule 117 (expr -> multi .)
    IMPRIME         reduce using rule 117 (expr -> multi .)
    IMPRIMENL       reduce using rule 117 (expr -> multi .)
    LEE             reduce using rule 117 (expr -> multi .)
    DECR            reduce using rule 117 (expr -> multi .)
    INCR            reduce using rule 117 (expr -> multi .)
    MAS             shift and go to state 154
    MENOS           shift and go to state 155


state 81

    (128) signo -> MENOS . termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    MENOS           reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    termino                        shift and go to state 156
    lfunc                          shift and go to state 90

state 82

    (120) multi -> expo .
    (121) multi -> expo . MULTI multi
    (122) multi -> expo . DIV multi
    (123) multi -> expo . MOD multi

    MAS             reduce using rule 120 (multi -> expo .)
    MENOS           reduce using rule 120 (multi -> expo .)
    OP_REL          reduce using rule 120 (multi -> expo .)
    Y               reduce using rule 120 (multi -> expo .)
    O               reduce using rule 120 (multi -> expo .)
    CORCHETE_TERMINA reduce using rule 120 (multi -> expo .)
    error           reduce using rule 120 (multi -> expo .)
    COMA            reduce using rule 120 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 120 (multi -> expo .)
    PUNTO_COMA      reduce using rule 120 (multi -> expo .)
    HASTA           reduce using rule 120 (multi -> expo .)
    SINO            reduce using rule 120 (multi -> expo .)
    FIN             reduce using rule 120 (multi -> expo .)
    SEA             reduce using rule 120 (multi -> expo .)
    OTRO            reduce using rule 120 (multi -> expo .)
    INICIO          reduce using rule 120 (multi -> expo .)
    LIMPIA          reduce using rule 120 (multi -> expo .)
    INTERRUMPE      reduce using rule 120 (multi -> expo .)
    CONTINUA        reduce using rule 120 (multi -> expo .)
    SI              reduce using rule 120 (multi -> expo .)
    IDENT           reduce using rule 120 (multi -> expo .)
    DESDE           reduce using rule 120 (multi -> expo .)
    REPETIR         reduce using rule 120 (multi -> expo .)
    MIENTRAS        reduce using rule 120 (multi -> expo .)
    CUANDO          reduce using rule 120 (multi -> expo .)
    REGRESA         reduce using rule 120 (multi -> expo .)
    IMPRIME         reduce using rule 120 (multi -> expo .)
    IMPRIMENL       reduce using rule 120 (multi -> expo .)
    LEE             reduce using rule 120 (multi -> expo .)
    DECR            reduce using rule 120 (multi -> expo .)
    INCR            reduce using rule 120 (multi -> expo .)
    MULTI           shift and go to state 157
    DIV             shift and go to state 158
    MOD             shift and go to state 159


state 83

    (125) expo -> signo .
    (126) expo -> signo . POTENCIA expo

    MULTI           reduce using rule 125 (expo -> signo .)
    DIV             reduce using rule 125 (expo -> signo .)
    MOD             reduce using rule 125 (expo -> signo .)
    MAS             reduce using rule 125 (expo -> signo .)
    MENOS           reduce using rule 125 (expo -> signo .)
    OP_REL          reduce using rule 125 (expo -> signo .)
    Y               reduce using rule 125 (expo -> signo .)
    O               reduce using rule 125 (expo -> signo .)
    CORCHETE_TERMINA reduce using rule 125 (expo -> signo .)
    error           reduce using rule 125 (expo -> signo .)
    COMA            reduce using rule 125 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 125 (expo -> signo .)
    PUNTO_COMA      reduce using rule 125 (expo -> signo .)
    HASTA           reduce using rule 125 (expo -> signo .)
    SINO            reduce using rule 125 (expo -> signo .)
    FIN             reduce using rule 125 (expo -> signo .)
    SEA             reduce using rule 125 (expo -> signo .)
    OTRO            reduce using rule 125 (expo -> signo .)
    INICIO          reduce using rule 125 (expo -> signo .)
    LIMPIA          reduce using rule 125 (expo -> signo .)
    INTERRUMPE      reduce using rule 125 (expo -> signo .)
    CONTINUA        reduce using rule 125 (expo -> signo .)
    SI              reduce using rule 125 (expo -> signo .)
    IDENT           reduce using rule 125 (expo -> signo .)
    DESDE           reduce using rule 125 (expo -> signo .)
    REPETIR         reduce using rule 125 (expo -> signo .)
    MIENTRAS        reduce using rule 125 (expo -> signo .)
    CUANDO          reduce using rule 125 (expo -> signo .)
    REGRESA         reduce using rule 125 (expo -> signo .)
    IMPRIME         reduce using rule 125 (expo -> signo .)
    IMPRIMENL       reduce using rule 125 (expo -> signo .)
    LEE             reduce using rule 125 (expo -> signo .)
    DECR            reduce using rule 125 (expo -> signo .)
    INCR            reduce using rule 125 (expo -> signo .)
    POTENCIA        shift and go to state 160


state 84

    (127) signo -> termino .

    POTENCIA        reduce using rule 127 (signo -> termino .)
    MULTI           reduce using rule 127 (signo -> termino .)
    DIV             reduce using rule 127 (signo -> termino .)
    MOD             reduce using rule 127 (signo -> termino .)
    MAS             reduce using rule 127 (signo -> termino .)
    MENOS           reduce using rule 127 (signo -> termino .)
    OP_REL          reduce using rule 127 (signo -> termino .)
    Y               reduce using rule 127 (signo -> termino .)
    O               reduce using rule 127 (signo -> termino .)
    CORCHETE_TERMINA reduce using rule 127 (signo -> termino .)
    error           reduce using rule 127 (signo -> termino .)
    COMA            reduce using rule 127 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 127 (signo -> termino .)
    PUNTO_COMA      reduce using rule 127 (signo -> termino .)
    HASTA           reduce using rule 127 (signo -> termino .)
    SINO            reduce using rule 127 (signo -> termino .)
    FIN             reduce using rule 127 (signo -> termino .)
    SEA             reduce using rule 127 (signo -> termino .)
    OTRO            reduce using rule 127 (signo -> termino .)
    INICIO          reduce using rule 127 (signo -> termino .)
    LIMPIA          reduce using rule 127 (signo -> termino .)
    INTERRUMPE      reduce using rule 127 (signo -> termino .)
    CONTINUA        reduce using rule 127 (signo -> termino .)
    SI              reduce using rule 127 (signo -> termino .)
    IDENT           reduce using rule 127 (signo -> termino .)
    DESDE           reduce using rule 127 (signo -> termino .)
    REPETIR         reduce using rule 127 (signo -> termino .)
    MIENTRAS        reduce using rule 127 (signo -> termino .)
    CUANDO          reduce using rule 127 (signo -> termino .)
    REGRESA         reduce using rule 127 (signo -> termino .)
    IMPRIME         reduce using rule 127 (signo -> termino .)
    IMPRIMENL       reduce using rule 127 (signo -> termino .)
    LEE             reduce using rule 127 (signo -> termino .)
    DECR            reduce using rule 127 (signo -> termino .)
    INCR            reduce using rule 127 (signo -> termino .)


state 85

    (130) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 130 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 130 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 130 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 130 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 130 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 130 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 130 (termino -> CTE_ENTERA .)
    Y               reduce using rule 130 (termino -> CTE_ENTERA .)
    O               reduce using rule 130 (termino -> CTE_ENTERA .)
    CORCHETE_TERMINA reduce using rule 130 (termino -> CTE_ENTERA .)
    error           reduce using rule 130 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 130 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 130 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 130 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 130 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 130 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 130 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 130 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 130 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 130 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 130 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 130 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 130 (termino -> CTE_ENTERA .)
    SI              reduce using rule 130 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 130 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 130 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 130 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 130 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 130 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 130 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 130 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 130 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 130 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 130 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 130 (termino -> CTE_ENTERA .)


state 86

    (131) termino -> CTE_REAL .

    POTENCIA        reduce using rule 131 (termino -> CTE_REAL .)
    MULTI           reduce using rule 131 (termino -> CTE_REAL .)
    DIV             reduce using rule 131 (termino -> CTE_REAL .)
    MOD             reduce using rule 131 (termino -> CTE_REAL .)
    MAS             reduce using rule 131 (termino -> CTE_REAL .)
    MENOS           reduce using rule 131 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 131 (termino -> CTE_REAL .)
    Y               reduce using rule 131 (termino -> CTE_REAL .)
    O               reduce using rule 131 (termino -> CTE_REAL .)
    CORCHETE_TERMINA reduce using rule 131 (termino -> CTE_REAL .)
    error           reduce using rule 131 (termino -> CTE_REAL .)
    COMA            reduce using rule 131 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 131 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 131 (termino -> CTE_REAL .)
    HASTA           reduce using rule 131 (termino -> CTE_REAL .)
    SINO            reduce using rule 131 (termino -> CTE_REAL .)
    FIN             reduce using rule 131 (termino -> CTE_REAL .)
    SEA             reduce using rule 131 (termino -> CTE_REAL .)
    OTRO            reduce using rule 131 (termino -> CTE_REAL .)
    INICIO          reduce using rule 131 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 131 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 131 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 131 (termino -> CTE_REAL .)
    SI              reduce using rule 131 (termino -> CTE_REAL .)
    IDENT           reduce using rule 131 (termino -> CTE_REAL .)
    DESDE           reduce using rule 131 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 131 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 131 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 131 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 131 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 131 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 131 (termino -> CTE_REAL .)
    LEE             reduce using rule 131 (termino -> CTE_REAL .)
    DECR            reduce using rule 131 (termino -> CTE_REAL .)
    INCR            reduce using rule 131 (termino -> CTE_REAL .)


state 87

    (132) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 132 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 132 (termino -> CTE_ALFA .)
    DIV             reduce using rule 132 (termino -> CTE_ALFA .)
    MOD             reduce using rule 132 (termino -> CTE_ALFA .)
    MAS             reduce using rule 132 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 132 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 132 (termino -> CTE_ALFA .)
    Y               reduce using rule 132 (termino -> CTE_ALFA .)
    O               reduce using rule 132 (termino -> CTE_ALFA .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> CTE_ALFA .)
    error           reduce using rule 132 (termino -> CTE_ALFA .)
    COMA            reduce using rule 132 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 132 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 132 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 132 (termino -> CTE_ALFA .)
    SINO            reduce using rule 132 (termino -> CTE_ALFA .)
    FIN             reduce using rule 132 (termino -> CTE_ALFA .)
    SEA             reduce using rule 132 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 132 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 132 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 132 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 132 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 132 (termino -> CTE_ALFA .)
    SI              reduce using rule 132 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 132 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 132 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 132 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 132 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 132 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 132 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 132 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 132 (termino -> CTE_ALFA .)
    LEE             reduce using rule 132 (termino -> CTE_ALFA .)
    DECR            reduce using rule 132 (termino -> CTE_ALFA .)
    INCR            reduce using rule 132 (termino -> CTE_ALFA .)


state 88

    (133) termino -> VERDADERO .

    POTENCIA        reduce using rule 133 (termino -> VERDADERO .)
    MULTI           reduce using rule 133 (termino -> VERDADERO .)
    DIV             reduce using rule 133 (termino -> VERDADERO .)
    MOD             reduce using rule 133 (termino -> VERDADERO .)
    MAS             reduce using rule 133 (termino -> VERDADERO .)
    MENOS           reduce using rule 133 (termino -> VERDADERO .)
    OP_REL          reduce using rule 133 (termino -> VERDADERO .)
    Y               reduce using rule 133 (termino -> VERDADERO .)
    O               reduce using rule 133 (termino -> VERDADERO .)
    CORCHETE_TERMINA reduce using rule 133 (termino -> VERDADERO .)
    error           reduce using rule 133 (termino -> VERDADERO .)
    COMA            reduce using rule 133 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 133 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 133 (termino -> VERDADERO .)
    HASTA           reduce using rule 133 (termino -> VERDADERO .)
    SINO            reduce using rule 133 (termino -> VERDADERO .)
    FIN             reduce using rule 133 (termino -> VERDADERO .)
    SEA             reduce using rule 133 (termino -> VERDADERO .)
    OTRO            reduce using rule 133 (termino -> VERDADERO .)
    INICIO          reduce using rule 133 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 133 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 133 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 133 (termino -> VERDADERO .)
    SI              reduce using rule 133 (termino -> VERDADERO .)
    IDENT           reduce using rule 133 (termino -> VERDADERO .)
    DESDE           reduce using rule 133 (termino -> VERDADERO .)
    REPETIR         reduce using rule 133 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 133 (termino -> VERDADERO .)
    CUANDO          reduce using rule 133 (termino -> VERDADERO .)
    REGRESA         reduce using rule 133 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 133 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 133 (termino -> VERDADERO .)
    LEE             reduce using rule 133 (termino -> VERDADERO .)
    DECR            reduce using rule 133 (termino -> VERDADERO .)
    INCR            reduce using rule 133 (termino -> VERDADERO .)


state 89

    (134) termino -> FALSO .

    POTENCIA        reduce using rule 134 (termino -> FALSO .)
    MULTI           reduce using rule 134 (termino -> FALSO .)
    DIV             reduce using rule 134 (termino -> FALSO .)
    MOD             reduce using rule 134 (termino -> FALSO .)
    MAS             reduce using rule 134 (termino -> FALSO .)
    MENOS           reduce using rule 134 (termino -> FALSO .)
    OP_REL          reduce using rule 134 (termino -> FALSO .)
    Y               reduce using rule 134 (termino -> FALSO .)
    O               reduce using rule 134 (termino -> FALSO .)
    CORCHETE_TERMINA reduce using rule 134 (termino -> FALSO .)
    error           reduce using rule 134 (termino -> FALSO .)
    COMA            reduce using rule 134 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 134 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 134 (termino -> FALSO .)
    HASTA           reduce using rule 134 (termino -> FALSO .)
    SINO            reduce using rule 134 (termino -> FALSO .)
    FIN             reduce using rule 134 (termino -> FALSO .)
    SEA             reduce using rule 134 (termino -> FALSO .)
    OTRO            reduce using rule 134 (termino -> FALSO .)
    INICIO          reduce using rule 134 (termino -> FALSO .)
    LIMPIA          reduce using rule 134 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 134 (termino -> FALSO .)
    CONTINUA        reduce using rule 134 (termino -> FALSO .)
    SI              reduce using rule 134 (termino -> FALSO .)
    IDENT           reduce using rule 134 (termino -> FALSO .)
    DESDE           reduce using rule 134 (termino -> FALSO .)
    REPETIR         reduce using rule 134 (termino -> FALSO .)
    MIENTRAS        reduce using rule 134 (termino -> FALSO .)
    CUANDO          reduce using rule 134 (termino -> FALSO .)
    REGRESA         reduce using rule 134 (termino -> FALSO .)
    IMPRIME         reduce using rule 134 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 134 (termino -> FALSO .)
    LEE             reduce using rule 134 (termino -> FALSO .)
    DECR            reduce using rule 134 (termino -> FALSO .)
    INCR            reduce using rule 134 (termino -> FALSO .)


state 90

    (137) termino -> lfunc .

    POTENCIA        reduce using rule 137 (termino -> lfunc .)
    MULTI           reduce using rule 137 (termino -> lfunc .)
    DIV             reduce using rule 137 (termino -> lfunc .)
    MOD             reduce using rule 137 (termino -> lfunc .)
    MAS             reduce using rule 137 (termino -> lfunc .)
    MENOS           reduce using rule 137 (termino -> lfunc .)
    OP_REL          reduce using rule 137 (termino -> lfunc .)
    Y               reduce using rule 137 (termino -> lfunc .)
    O               reduce using rule 137 (termino -> lfunc .)
    CORCHETE_TERMINA reduce using rule 137 (termino -> lfunc .)
    error           reduce using rule 137 (termino -> lfunc .)
    COMA            reduce using rule 137 (termino -> lfunc .)
    PAREN_TERMINA   reduce using rule 137 (termino -> lfunc .)
    PUNTO_COMA      reduce using rule 137 (termino -> lfunc .)
    HASTA           reduce using rule 137 (termino -> lfunc .)
    SINO            reduce using rule 137 (termino -> lfunc .)
    FIN             reduce using rule 137 (termino -> lfunc .)
    SEA             reduce using rule 137 (termino -> lfunc .)
    OTRO            reduce using rule 137 (termino -> lfunc .)
    INICIO          reduce using rule 137 (termino -> lfunc .)
    LIMPIA          reduce using rule 137 (termino -> lfunc .)
    INTERRUMPE      reduce using rule 137 (termino -> lfunc .)
    CONTINUA        reduce using rule 137 (termino -> lfunc .)
    SI              reduce using rule 137 (termino -> lfunc .)
    IDENT           reduce using rule 137 (termino -> lfunc .)
    DESDE           reduce using rule 137 (termino -> lfunc .)
    REPETIR         reduce using rule 137 (termino -> lfunc .)
    MIENTRAS        reduce using rule 137 (termino -> lfunc .)
    CUANDO          reduce using rule 137 (termino -> lfunc .)
    REGRESA         reduce using rule 137 (termino -> lfunc .)
    IMPRIME         reduce using rule 137 (termino -> lfunc .)
    IMPRIMENL       reduce using rule 137 (termino -> lfunc .)
    LEE             reduce using rule 137 (termino -> lfunc .)
    DECR            reduce using rule 137 (termino -> lfunc .)
    INCR            reduce using rule 137 (termino -> lfunc .)


state 91

    (29) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 29 (opasig -> OP_ASIG CTE_ENTERA .)
    error           reduce using rule 29 (opasig -> OP_ASIG CTE_ENTERA .)


state 92

    (30) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 30 (opasig -> OP_ASIG IDENT .)
    error           reduce using rule 30 (opasig -> OP_ASIG IDENT .)


state 93

    (25) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens
    (27) dimens -> CORCHETE_EMPIEZA valor . error dimens

    CORCHETE_TERMINA shift and go to state 161
    error           shift and go to state 162


state 94

    (124) multi -> empty .

    MAS             reduce using rule 124 (multi -> empty .)
    MENOS           reduce using rule 124 (multi -> empty .)
    OP_REL          reduce using rule 124 (multi -> empty .)
    Y               reduce using rule 124 (multi -> empty .)
    O               reduce using rule 124 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 124 (multi -> empty .)
    error           reduce using rule 124 (multi -> empty .)
    COMA            reduce using rule 124 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 124 (multi -> empty .)
    PUNTO_COMA      reduce using rule 124 (multi -> empty .)
    HASTA           reduce using rule 124 (multi -> empty .)
    SINO            reduce using rule 124 (multi -> empty .)
    FIN             reduce using rule 124 (multi -> empty .)
    SEA             reduce using rule 124 (multi -> empty .)
    OTRO            reduce using rule 124 (multi -> empty .)
    INICIO          reduce using rule 124 (multi -> empty .)
    LIMPIA          reduce using rule 124 (multi -> empty .)
    INTERRUMPE      reduce using rule 124 (multi -> empty .)
    CONTINUA        reduce using rule 124 (multi -> empty .)
    SI              reduce using rule 124 (multi -> empty .)
    IDENT           reduce using rule 124 (multi -> empty .)
    DESDE           reduce using rule 124 (multi -> empty .)
    REPETIR         reduce using rule 124 (multi -> empty .)
    MIENTRAS        reduce using rule 124 (multi -> empty .)
    CUANDO          reduce using rule 124 (multi -> empty .)
    REGRESA         reduce using rule 124 (multi -> empty .)
    IMPRIME         reduce using rule 124 (multi -> empty .)
    IMPRIMENL       reduce using rule 124 (multi -> empty .)
    LEE             reduce using rule 124 (multi -> empty .)
    DECR            reduce using rule 124 (multi -> empty .)
    INCR            reduce using rule 124 (multi -> empty .)


state 95

    (129) termino -> IDENT .
    (136) termino -> IDENT . udim
    (138) lfunc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> IDENT . PAREN_EMPIEZA error PAREN_TERMINA
    (107) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (108) udim -> . empty
    (153) empty -> .

  ! reduce/reduce conflict for POTENCIA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for IDENT resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 129 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 129 (termino -> IDENT .)
    POTENCIA        reduce using rule 129 (termino -> IDENT .)
    MULTI           reduce using rule 129 (termino -> IDENT .)
    DIV             reduce using rule 129 (termino -> IDENT .)
    MOD             reduce using rule 129 (termino -> IDENT .)
    MAS             reduce using rule 129 (termino -> IDENT .)
    MENOS           reduce using rule 129 (termino -> IDENT .)
    OP_REL          reduce using rule 129 (termino -> IDENT .)
    Y               reduce using rule 129 (termino -> IDENT .)
    O               reduce using rule 129 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 129 (termino -> IDENT .)
    error           reduce using rule 129 (termino -> IDENT .)
    COMA            reduce using rule 129 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 129 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 129 (termino -> IDENT .)
    HASTA           reduce using rule 129 (termino -> IDENT .)
    SINO            reduce using rule 129 (termino -> IDENT .)
    FIN             reduce using rule 129 (termino -> IDENT .)
    SEA             reduce using rule 129 (termino -> IDENT .)
    OTRO            reduce using rule 129 (termino -> IDENT .)
    INICIO          reduce using rule 129 (termino -> IDENT .)
    LIMPIA          reduce using rule 129 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 129 (termino -> IDENT .)
    CONTINUA        reduce using rule 129 (termino -> IDENT .)
    SI              reduce using rule 129 (termino -> IDENT .)
    IDENT           reduce using rule 129 (termino -> IDENT .)
    DESDE           reduce using rule 129 (termino -> IDENT .)
    REPETIR         reduce using rule 129 (termino -> IDENT .)
    MIENTRAS        reduce using rule 129 (termino -> IDENT .)
    CUANDO          reduce using rule 129 (termino -> IDENT .)
    REGRESA         reduce using rule 129 (termino -> IDENT .)
    IMPRIME         reduce using rule 129 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 129 (termino -> IDENT .)
    LEE             reduce using rule 129 (termino -> IDENT .)
    DECR            reduce using rule 129 (termino -> IDENT .)
    INCR            reduce using rule 129 (termino -> IDENT .)
    PAREN_EMPIEZA   shift and go to state 146
    CORCHETE_EMPIEZA shift and go to state 163

  ! POTENCIA        [ reduce using rule 153 (empty -> .) ]
  ! MULTI           [ reduce using rule 153 (empty -> .) ]
  ! DIV             [ reduce using rule 153 (empty -> .) ]
  ! MOD             [ reduce using rule 153 (empty -> .) ]
  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]

    udim                           shift and go to state 145
    empty                          shift and go to state 164

state 96

    (35) gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (36) gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . gpoconst
    (35) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (36) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst
    (37) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (38) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst
    (39) gpoconst -> . empty
    (102) gpoconst -> . CTE_ALFA gpoconst2
    (153) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PUNTOS_DOBLES   reduce using rule 35 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9
    CTE_ALFA        shift and go to state 11

  ! VARIABLES       [ reduce using rule 153 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 153 (empty -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 153 (empty -> .) ]

    gpoconst                       shift and go to state 165
    empty                          shift and go to state 10

state 97

    (37) gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (38) gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . gpoconst
    (35) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (36) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst
    (37) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (38) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst
    (39) gpoconst -> . empty
    (102) gpoconst -> . CTE_ALFA gpoconst2
    (153) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PUNTOS_DOBLES   reduce using rule 37 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9
    CTE_ALFA        shift and go to state 11

  ! VARIABLES       [ reduce using rule 153 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 153 (empty -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 153 (empty -> .) ]

    gpoconst                       shift and go to state 166
    empty                          shift and go to state 10

state 98

    (103) gpoconst3 -> CTE_ALFA gpoconst2 .

    VARIABLES       reduce using rule 103 (gpoconst3 -> CTE_ALFA gpoconst2 .)
    PROTOTIPOS      reduce using rule 103 (gpoconst3 -> CTE_ALFA gpoconst2 .)
    PROCEDIMIENTO   reduce using rule 103 (gpoconst3 -> CTE_ALFA gpoconst2 .)
    FUNCION         reduce using rule 103 (gpoconst3 -> CTE_ALFA gpoconst2 .)
    PROGRAMA        reduce using rule 103 (gpoconst3 -> CTE_ALFA gpoconst2 .)
    PUNTOS_DOBLES   reduce using rule 103 (gpoconst3 -> CTE_ALFA gpoconst2 .)


state 99

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA PUNTO

    FIN             shift and go to state 167


state 100

    (66) block -> estatuto . PUNTO_COMA block
    (67) block -> estatuto . PUNTO_COMA
    (68) block -> estatuto . error
    (69) block -> estatuto . error block

    PUNTO_COMA      shift and go to state 168
    error           shift and go to state 169


state 101

    (70) estatuto -> si .

    PUNTO_COMA      reduce using rule 70 (estatuto -> si .)
    error           reduce using rule 70 (estatuto -> si .)
    SINO            reduce using rule 70 (estatuto -> si .)
    FIN             reduce using rule 70 (estatuto -> si .)
    SEA             reduce using rule 70 (estatuto -> si .)
    OTRO            reduce using rule 70 (estatuto -> si .)


state 102

    (71) estatuto -> lfunc .

    PUNTO_COMA      reduce using rule 71 (estatuto -> lfunc .)
    error           reduce using rule 71 (estatuto -> lfunc .)
    SINO            reduce using rule 71 (estatuto -> lfunc .)
    FIN             reduce using rule 71 (estatuto -> lfunc .)
    SEA             reduce using rule 71 (estatuto -> lfunc .)
    OTRO            reduce using rule 71 (estatuto -> lfunc .)


state 103

    (72) estatuto -> LIMPIA .

    PUNTO_COMA      reduce using rule 72 (estatuto -> LIMPIA .)
    error           reduce using rule 72 (estatuto -> LIMPIA .)
    SINO            reduce using rule 72 (estatuto -> LIMPIA .)
    FIN             reduce using rule 72 (estatuto -> LIMPIA .)
    SEA             reduce using rule 72 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 72 (estatuto -> LIMPIA .)


state 104

    (73) estatuto -> desde .

    PUNTO_COMA      reduce using rule 73 (estatuto -> desde .)
    error           reduce using rule 73 (estatuto -> desde .)
    SINO            reduce using rule 73 (estatuto -> desde .)
    FIN             reduce using rule 73 (estatuto -> desde .)
    SEA             reduce using rule 73 (estatuto -> desde .)
    OTRO            reduce using rule 73 (estatuto -> desde .)


state 105

    (74) estatuto -> repetir .

    PUNTO_COMA      reduce using rule 74 (estatuto -> repetir .)
    error           reduce using rule 74 (estatuto -> repetir .)
    SINO            reduce using rule 74 (estatuto -> repetir .)
    FIN             reduce using rule 74 (estatuto -> repetir .)
    SEA             reduce using rule 74 (estatuto -> repetir .)
    OTRO            reduce using rule 74 (estatuto -> repetir .)


state 106

    (75) estatuto -> mientras .

    PUNTO_COMA      reduce using rule 75 (estatuto -> mientras .)
    error           reduce using rule 75 (estatuto -> mientras .)
    SINO            reduce using rule 75 (estatuto -> mientras .)
    FIN             reduce using rule 75 (estatuto -> mientras .)
    SEA             reduce using rule 75 (estatuto -> mientras .)
    OTRO            reduce using rule 75 (estatuto -> mientras .)


state 107

    (76) estatuto -> cuando .

    PUNTO_COMA      reduce using rule 76 (estatuto -> cuando .)
    error           reduce using rule 76 (estatuto -> cuando .)
    SINO            reduce using rule 76 (estatuto -> cuando .)
    FIN             reduce using rule 76 (estatuto -> cuando .)
    SEA             reduce using rule 76 (estatuto -> cuando .)
    OTRO            reduce using rule 76 (estatuto -> cuando .)


state 108

    (77) estatuto -> regresa .

    PUNTO_COMA      reduce using rule 77 (estatuto -> regresa .)
    error           reduce using rule 77 (estatuto -> regresa .)
    SINO            reduce using rule 77 (estatuto -> regresa .)
    FIN             reduce using rule 77 (estatuto -> regresa .)
    SEA             reduce using rule 77 (estatuto -> regresa .)
    OTRO            reduce using rule 77 (estatuto -> regresa .)


state 109

    (78) estatuto -> asigna .

    PUNTO_COMA      reduce using rule 78 (estatuto -> asigna .)
    error           reduce using rule 78 (estatuto -> asigna .)
    SINO            reduce using rule 78 (estatuto -> asigna .)
    FIN             reduce using rule 78 (estatuto -> asigna .)
    SEA             reduce using rule 78 (estatuto -> asigna .)
    OTRO            reduce using rule 78 (estatuto -> asigna .)


state 110

    (79) estatuto -> imprime .

    PUNTO_COMA      reduce using rule 79 (estatuto -> imprime .)
    error           reduce using rule 79 (estatuto -> imprime .)
    SINO            reduce using rule 79 (estatuto -> imprime .)
    FIN             reduce using rule 79 (estatuto -> imprime .)
    SEA             reduce using rule 79 (estatuto -> imprime .)
    OTRO            reduce using rule 79 (estatuto -> imprime .)


state 111

    (80) estatuto -> imprimenl .

    PUNTO_COMA      reduce using rule 80 (estatuto -> imprimenl .)
    error           reduce using rule 80 (estatuto -> imprimenl .)
    SINO            reduce using rule 80 (estatuto -> imprimenl .)
    FIN             reduce using rule 80 (estatuto -> imprimenl .)
    SEA             reduce using rule 80 (estatuto -> imprimenl .)
    OTRO            reduce using rule 80 (estatuto -> imprimenl .)


state 112

    (81) estatuto -> lee .

    PUNTO_COMA      reduce using rule 81 (estatuto -> lee .)
    error           reduce using rule 81 (estatuto -> lee .)
    SINO            reduce using rule 81 (estatuto -> lee .)
    FIN             reduce using rule 81 (estatuto -> lee .)
    SEA             reduce using rule 81 (estatuto -> lee .)
    OTRO            reduce using rule 81 (estatuto -> lee .)


state 113

    (82) estatuto -> INTERRUMPE .

    PUNTO_COMA      reduce using rule 82 (estatuto -> INTERRUMPE .)
    error           reduce using rule 82 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 82 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 82 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 82 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 82 (estatuto -> INTERRUMPE .)


state 114

    (83) estatuto -> CONTINUA .

    PUNTO_COMA      reduce using rule 83 (estatuto -> CONTINUA .)
    error           reduce using rule 83 (estatuto -> CONTINUA .)
    SINO            reduce using rule 83 (estatuto -> CONTINUA .)
    FIN             reduce using rule 83 (estatuto -> CONTINUA .)
    SEA             reduce using rule 83 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 83 (estatuto -> CONTINUA .)


state 115

    (84) estatuto -> empty .

    PUNTO_COMA      reduce using rule 84 (estatuto -> empty .)
    error           reduce using rule 84 (estatuto -> empty .)


state 116

    (85) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 170


state 117

    (138) lfunc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> IDENT . PAREN_EMPIEZA error PAREN_TERMINA
    (96) asigna -> IDENT . udim OP_ASIG exprlog
    (107) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (108) udim -> . empty
    (153) empty -> .

    PAREN_EMPIEZA   shift and go to state 146
    CORCHETE_EMPIEZA shift and go to state 163
    OP_ASIG         reduce using rule 153 (empty -> .)

    udim                           shift and go to state 171
    empty                          shift and go to state 164

state 118

    (91) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> DESDE . EL VALOR DE asigna HASTA expr error bckesp

    EL              shift and go to state 172


state 119

    (94) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    block                          shift and go to state 173
    estatuto                       shift and go to state 100
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 120

    (95) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 174


state 121

    (97) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 175


state 122

    (106) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 176


state 123

    (140) imprime -> IMPRIME . begin gpoexp PAREN_TERMINA
    (142) imprime -> IMPRIME . error gpoexp PAREN_TERMINA
    (143) imprime -> IMPRIME . begin gpoexp error
    (141) begin -> . PAREN_EMPIEZA

    error           shift and go to state 178
    PAREN_EMPIEZA   shift and go to state 179

    begin                          shift and go to state 177

state 124

    (144) imprimenl -> IMPRIMENL . begin gpoexp PAREN_TERMINA
    (145) imprimenl -> IMPRIMENL . begin gpoexp error
    (146) imprimenl -> IMPRIMENL . error gpoexp PAREN_TERMINA
    (141) begin -> . PAREN_EMPIEZA

    error           shift and go to state 181
    PAREN_EMPIEZA   shift and go to state 179

    begin                          shift and go to state 180

state 125

    (147) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 182


state 126

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 184
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 127

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 187
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 128

    (40) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 188


state 129

    (46) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 189
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 130

    (47) protfunc -> FUNCION error PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 190
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 131

    (48) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 191
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 132

    (50) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 192
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 133

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (153) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 18
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]

    gpoids                         shift and go to state 16
    gpovars                        shift and go to state 193
    empty                          shift and go to state 17

state 134

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA . gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (153) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    FUNCION         reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROGRAMA        reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    INICIO          reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    IDENT           shift and go to state 18
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]

    gpoids                         shift and go to state 16
    gpovars                        shift and go to state 194
    empty                          shift and go to state 17

state 135

    (7) gpovars -> gpoids error TIPO PUNTO_COMA . gpovars
    (8) gpovars -> gpoids error TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoidsinner
    (12) gpoids -> . IDENT opasig COMA gpoidsinner
    (13) gpoids -> . IDENT dimens COMA gpoidsinner
    (14) gpoids -> . IDENT dimens
    (20) gpoids -> . empty
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (153) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    INICIO          reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    IDENT           shift and go to state 18
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 153 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 153 (empty -> .) ]
  ! FUNCION         [ reduce using rule 153 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]

    gpoids                         shift and go to state 16
    gpovars                        shift and go to state 195
    empty                          shift and go to state 17

state 136

    (15) gpoidsinner -> IDENT COMA . gpoidsinner
    (15) gpoidsinner -> . IDENT COMA gpoidsinner
    (16) gpoidsinner -> . IDENT opasig COMA gpoidsinner
    (17) gpoidsinner -> . IDENT
    (18) gpoidsinner -> . IDENT dimens COMA gpoidsinner
    (19) gpoidsinner -> . IDENT dimens
    (21) gpoidsinner -> . empty
    (153) empty -> .

    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoidsinner                    shift and go to state 196
    empty                          shift and go to state 65

state 137

    (16) gpoidsinner -> IDENT opasig . COMA gpoidsinner

    COMA            shift and go to state 197


state 138

    (18) gpoidsinner -> IDENT dimens . COMA gpoidsinner
    (19) gpoidsinner -> IDENT dimens .

    COMA            shift and go to state 198
    PUNTOS_DOBLES   reduce using rule 19 (gpoidsinner -> IDENT dimens .)
    error           reduce using rule 19 (gpoidsinner -> IDENT dimens .)


state 139

    (28) dimens -> error . valor CORCHETE_TERMINA dimens
    (32) valor -> . exprlog
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    valor                          shift and go to state 72
    exprlog                        shift and go to state 74
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 140

    (12) gpoids -> IDENT opasig COMA gpoidsinner .

    PUNTOS_DOBLES   reduce using rule 12 (gpoids -> IDENT opasig COMA gpoidsinner .)
    error           reduce using rule 12 (gpoids -> IDENT opasig COMA gpoidsinner .)


state 141

    (24) gpoids -> IDENT opasig error gpoids .

    PUNTOS_DOBLES   reduce using rule 24 (gpoids -> IDENT opasig error gpoids .)
    error           reduce using rule 24 (gpoids -> IDENT opasig error gpoids .)


state 142

    (20) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 20 (gpoids -> empty .)
    error           reduce using rule 20 (gpoids -> empty .)


state 143

    (13) gpoids -> IDENT dimens COMA gpoidsinner .

    PUNTOS_DOBLES   reduce using rule 13 (gpoids -> IDENT dimens COMA gpoidsinner .)
    error           reduce using rule 13 (gpoids -> IDENT dimens COMA gpoidsinner .)


state 144

    (22) gpoids -> IDENT dimens error gpoids .

    PUNTOS_DOBLES   reduce using rule 22 (gpoids -> IDENT dimens error gpoids .)
    error           reduce using rule 22 (gpoids -> IDENT dimens error gpoids .)


state 145

    (136) termino -> IDENT udim .

    POTENCIA        reduce using rule 136 (termino -> IDENT udim .)
    MULTI           reduce using rule 136 (termino -> IDENT udim .)
    DIV             reduce using rule 136 (termino -> IDENT udim .)
    MOD             reduce using rule 136 (termino -> IDENT udim .)
    MAS             reduce using rule 136 (termino -> IDENT udim .)
    MENOS           reduce using rule 136 (termino -> IDENT udim .)
    OP_REL          reduce using rule 136 (termino -> IDENT udim .)
    Y               reduce using rule 136 (termino -> IDENT udim .)
    O               reduce using rule 136 (termino -> IDENT udim .)
    CORCHETE_TERMINA reduce using rule 136 (termino -> IDENT udim .)
    error           reduce using rule 136 (termino -> IDENT udim .)
    COMA            reduce using rule 136 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 136 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 136 (termino -> IDENT udim .)
    HASTA           reduce using rule 136 (termino -> IDENT udim .)
    SINO            reduce using rule 136 (termino -> IDENT udim .)
    FIN             reduce using rule 136 (termino -> IDENT udim .)
    SEA             reduce using rule 136 (termino -> IDENT udim .)
    OTRO            reduce using rule 136 (termino -> IDENT udim .)
    INICIO          reduce using rule 136 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 136 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 136 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 136 (termino -> IDENT udim .)
    SI              reduce using rule 136 (termino -> IDENT udim .)
    IDENT           reduce using rule 136 (termino -> IDENT udim .)
    DESDE           reduce using rule 136 (termino -> IDENT udim .)
    REPETIR         reduce using rule 136 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 136 (termino -> IDENT udim .)
    CUANDO          reduce using rule 136 (termino -> IDENT udim .)
    REGRESA         reduce using rule 136 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 136 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 136 (termino -> IDENT udim .)
    LEE             reduce using rule 136 (termino -> IDENT udim .)
    DECR            reduce using rule 136 (termino -> IDENT udim .)
    INCR            reduce using rule 136 (termino -> IDENT udim .)


state 146

    (138) lfunc -> IDENT PAREN_EMPIEZA . uparams PAREN_TERMINA
    (139) lfunc -> IDENT PAREN_EMPIEZA . error PAREN_TERMINA
    (151) uparams -> . exprlog
    (152) uparams -> . exprlog COMA uparams
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    error           shift and go to state 200
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    uparams                        shift and go to state 199
    exprlog                        shift and go to state 201
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 147

    (31) opasig -> empty .
    (26) dimens -> empty .
    (108) udim -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 26 (dimens -> empty .)
  ! reduce/reduce conflict for error resolved using rule 26 (dimens -> empty .)
    COMA            reduce using rule 26 (dimens -> empty .)
    error           reduce using rule 26 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 26 (dimens -> empty .)
    POTENCIA        reduce using rule 108 (udim -> empty .)
    MULTI           reduce using rule 108 (udim -> empty .)
    DIV             reduce using rule 108 (udim -> empty .)
    MOD             reduce using rule 108 (udim -> empty .)
    MAS             reduce using rule 108 (udim -> empty .)
    MENOS           reduce using rule 108 (udim -> empty .)
    OP_REL          reduce using rule 108 (udim -> empty .)
    Y               reduce using rule 108 (udim -> empty .)
    O               reduce using rule 108 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 108 (udim -> empty .)

  ! COMA            [ reduce using rule 31 (opasig -> empty .) ]
  ! error           [ reduce using rule 31 (opasig -> empty .) ]


state 148

    (25) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (27) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (107) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (32) valor -> . exprlog
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    valor                          shift and go to state 93
    expr                           shift and go to state 202
    exprlog                        shift and go to state 74
    multi                          shift and go to state 80
    opy                            shift and go to state 75
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    opno                           shift and go to state 76
    signo                          shift and go to state 83
    oprel                          shift and go to state 77
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 149

    (28) dimens -> error valor CORCHETE_TERMINA . dimens
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (153) empty -> .

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 43
    error           shift and go to state 139
    COMA            reduce using rule 153 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

  ! error           [ reduce using rule 153 (empty -> .) ]

    dimens                         shift and go to state 203
    empty                          shift and go to state 204

state 150

    (110) exprlog -> opy O . exprlog
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    opy                            shift and go to state 75
    exprlog                        shift and go to state 205
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 151

    (112) opy -> opno Y . opy
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    opno                           shift and go to state 76
    opy                            shift and go to state 206
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 152

    (114) opno -> NO oprel .

    Y               reduce using rule 114 (opno -> NO oprel .)
    O               reduce using rule 114 (opno -> NO oprel .)
    CORCHETE_TERMINA reduce using rule 114 (opno -> NO oprel .)
    error           reduce using rule 114 (opno -> NO oprel .)
    COMA            reduce using rule 114 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 114 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 114 (opno -> NO oprel .)
    HASTA           reduce using rule 114 (opno -> NO oprel .)
    SINO            reduce using rule 114 (opno -> NO oprel .)
    FIN             reduce using rule 114 (opno -> NO oprel .)
    SEA             reduce using rule 114 (opno -> NO oprel .)
    OTRO            reduce using rule 114 (opno -> NO oprel .)
    INICIO          reduce using rule 114 (opno -> NO oprel .)
    LIMPIA          reduce using rule 114 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 114 (opno -> NO oprel .)
    CONTINUA        reduce using rule 114 (opno -> NO oprel .)
    SI              reduce using rule 114 (opno -> NO oprel .)
    IDENT           reduce using rule 114 (opno -> NO oprel .)
    DESDE           reduce using rule 114 (opno -> NO oprel .)
    REPETIR         reduce using rule 114 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 114 (opno -> NO oprel .)
    CUANDO          reduce using rule 114 (opno -> NO oprel .)
    REGRESA         reduce using rule 114 (opno -> NO oprel .)
    IMPRIME         reduce using rule 114 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 114 (opno -> NO oprel .)
    LEE             reduce using rule 114 (opno -> NO oprel .)


state 153

    (116) oprel -> expr OP_REL . oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    expr                           shift and go to state 79
    oprel                          shift and go to state 207
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 154

    (118) expr -> multi MAS . expr
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    multi                          shift and go to state 80
    expr                           shift and go to state 208
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 155

    (119) expr -> multi MENOS . expr
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    multi                          shift and go to state 80
    expr                           shift and go to state 209
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 156

    (128) signo -> MENOS termino .

    POTENCIA        reduce using rule 128 (signo -> MENOS termino .)
    MULTI           reduce using rule 128 (signo -> MENOS termino .)
    DIV             reduce using rule 128 (signo -> MENOS termino .)
    MOD             reduce using rule 128 (signo -> MENOS termino .)
    MAS             reduce using rule 128 (signo -> MENOS termino .)
    MENOS           reduce using rule 128 (signo -> MENOS termino .)
    OP_REL          reduce using rule 128 (signo -> MENOS termino .)
    Y               reduce using rule 128 (signo -> MENOS termino .)
    O               reduce using rule 128 (signo -> MENOS termino .)
    CORCHETE_TERMINA reduce using rule 128 (signo -> MENOS termino .)
    error           reduce using rule 128 (signo -> MENOS termino .)
    COMA            reduce using rule 128 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 128 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 128 (signo -> MENOS termino .)
    HASTA           reduce using rule 128 (signo -> MENOS termino .)
    SINO            reduce using rule 128 (signo -> MENOS termino .)
    FIN             reduce using rule 128 (signo -> MENOS termino .)
    SEA             reduce using rule 128 (signo -> MENOS termino .)
    OTRO            reduce using rule 128 (signo -> MENOS termino .)
    INICIO          reduce using rule 128 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 128 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 128 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 128 (signo -> MENOS termino .)
    SI              reduce using rule 128 (signo -> MENOS termino .)
    IDENT           reduce using rule 128 (signo -> MENOS termino .)
    DESDE           reduce using rule 128 (signo -> MENOS termino .)
    REPETIR         reduce using rule 128 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 128 (signo -> MENOS termino .)
    CUANDO          reduce using rule 128 (signo -> MENOS termino .)
    REGRESA         reduce using rule 128 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 128 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 128 (signo -> MENOS termino .)
    LEE             reduce using rule 128 (signo -> MENOS termino .)
    DECR            reduce using rule 128 (signo -> MENOS termino .)
    INCR            reduce using rule 128 (signo -> MENOS termino .)


state 157

    (121) multi -> expo MULTI . multi
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    expo                           shift and go to state 82
    multi                          shift and go to state 210
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 158

    (122) multi -> expo DIV . multi
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    expo                           shift and go to state 82
    multi                          shift and go to state 211
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 159

    (123) multi -> expo MOD . multi
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    expo                           shift and go to state 82
    multi                          shift and go to state 212
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 160

    (126) expo -> signo POTENCIA . expo
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)

  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    signo                          shift and go to state 83
    expo                           shift and go to state 213
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 161

    (25) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (153) empty -> .

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 43
    error           shift and go to state 139
    COMA            reduce using rule 153 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

  ! error           [ reduce using rule 153 (empty -> .) ]

    dimens                         shift and go to state 214
    empty                          shift and go to state 204

state 162

    (27) dimens -> CORCHETE_EMPIEZA valor error . dimens
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (153) empty -> .

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 43
    error           shift and go to state 139
    COMA            reduce using rule 153 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

  ! error           [ reduce using rule 153 (empty -> .) ]

    dimens                         shift and go to state 215
    empty                          shift and go to state 204

state 163

    (107) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    expr                           shift and go to state 216
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 164

    (108) udim -> empty .

    POTENCIA        reduce using rule 108 (udim -> empty .)
    MULTI           reduce using rule 108 (udim -> empty .)
    DIV             reduce using rule 108 (udim -> empty .)
    MOD             reduce using rule 108 (udim -> empty .)
    MAS             reduce using rule 108 (udim -> empty .)
    MENOS           reduce using rule 108 (udim -> empty .)
    OP_REL          reduce using rule 108 (udim -> empty .)
    Y               reduce using rule 108 (udim -> empty .)
    O               reduce using rule 108 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 108 (udim -> empty .)
    error           reduce using rule 108 (udim -> empty .)
    COMA            reduce using rule 108 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 108 (udim -> empty .)
    PUNTO_COMA      reduce using rule 108 (udim -> empty .)
    HASTA           reduce using rule 108 (udim -> empty .)
    SINO            reduce using rule 108 (udim -> empty .)
    FIN             reduce using rule 108 (udim -> empty .)
    SEA             reduce using rule 108 (udim -> empty .)
    OTRO            reduce using rule 108 (udim -> empty .)
    INICIO          reduce using rule 108 (udim -> empty .)
    LIMPIA          reduce using rule 108 (udim -> empty .)
    INTERRUMPE      reduce using rule 108 (udim -> empty .)
    CONTINUA        reduce using rule 108 (udim -> empty .)
    SI              reduce using rule 108 (udim -> empty .)
    IDENT           reduce using rule 108 (udim -> empty .)
    DESDE           reduce using rule 108 (udim -> empty .)
    REPETIR         reduce using rule 108 (udim -> empty .)
    MIENTRAS        reduce using rule 108 (udim -> empty .)
    CUANDO          reduce using rule 108 (udim -> empty .)
    REGRESA         reduce using rule 108 (udim -> empty .)
    IMPRIME         reduce using rule 108 (udim -> empty .)
    IMPRIMENL       reduce using rule 108 (udim -> empty .)
    LEE             reduce using rule 108 (udim -> empty .)
    DECR            reduce using rule 108 (udim -> empty .)
    INCR            reduce using rule 108 (udim -> empty .)
    OP_ASIG         reduce using rule 108 (udim -> empty .)


state 165

    (36) gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .

    VARIABLES       reduce using rule 36 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .)
    PROTOTIPOS      reduce using rule 36 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .)
    PROCEDIMIENTO   reduce using rule 36 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .)
    FUNCION         reduce using rule 36 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .)
    PROGRAMA        reduce using rule 36 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .)
    PUNTOS_DOBLES   reduce using rule 36 (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst .)


state 166

    (38) gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .

    VARIABLES       reduce using rule 38 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .)
    PROTOTIPOS      reduce using rule 38 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .)
    PROCEDIMIENTO   reduce using rule 38 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .)
    FUNCION         reduce using rule 38 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .)
    PROGRAMA        reduce using rule 38 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .)
    PUNTOS_DOBLES   reduce using rule 38 (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst .)


state 167

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA PUNTO

    DE              shift and go to state 217


state 168

    (66) block -> estatuto PUNTO_COMA . block
    (67) block -> estatuto PUNTO_COMA .
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    FIN             reduce using rule 67 (block -> estatuto PUNTO_COMA .)
    HASTA           reduce using rule 67 (block -> estatuto PUNTO_COMA .)
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    estatuto                       shift and go to state 100
    block                          shift and go to state 218
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 169

    (68) block -> estatuto error .
    (69) block -> estatuto error . block
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    FIN             reduce using rule 68 (block -> estatuto error .)
    HASTA           reduce using rule 68 (block -> estatuto error .)
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    estatuto                       shift and go to state 100
    block                          shift and go to state 219
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 170

    (85) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 220
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 171

    (96) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 221


state 172

    (91) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> DESDE EL . VALOR DE asigna HASTA expr error bckesp

    VALOR           shift and go to state 222


state 173

    (94) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 223


state 174

    (95) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 224


state 175

    (97) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 225


state 176

    (106) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 226
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 177

    (140) imprime -> IMPRIME begin . gpoexp PAREN_TERMINA
    (143) imprime -> IMPRIME begin . gpoexp error
    (149) gpoexp -> . exprlog
    (150) gpoexp -> . exprlog COMA gpoexp
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    gpoexp                         shift and go to state 227
    exprlog                        shift and go to state 228
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 178

    (142) imprime -> IMPRIME error . gpoexp PAREN_TERMINA
    (149) gpoexp -> . exprlog
    (150) gpoexp -> . exprlog COMA gpoexp
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    gpoexp                         shift and go to state 229
    exprlog                        shift and go to state 228
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 179

    (141) begin -> PAREN_EMPIEZA .

    NO              reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    MENOS           reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    IDENT           reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    CTE_ENTERA      reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    CTE_REAL        reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    CTE_ALFA        reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    VERDADERO       reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    FALSO           reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    PAREN_TERMINA   reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    error           reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    COMA            reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    O               reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    Y               reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    OP_REL          reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    MAS             reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    MULTI           reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    DIV             reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    MOD             reduce using rule 141 (begin -> PAREN_EMPIEZA .)
    POTENCIA        reduce using rule 141 (begin -> PAREN_EMPIEZA .)


state 180

    (144) imprimenl -> IMPRIMENL begin . gpoexp PAREN_TERMINA
    (145) imprimenl -> IMPRIMENL begin . gpoexp error
    (149) gpoexp -> . exprlog
    (150) gpoexp -> . exprlog COMA gpoexp
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    gpoexp                         shift and go to state 230
    exprlog                        shift and go to state 228
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 181

    (146) imprimenl -> IMPRIMENL error . gpoexp PAREN_TERMINA
    (149) gpoexp -> . exprlog
    (150) gpoexp -> . exprlog COMA gpoexp
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    gpoexp                         shift and go to state 231
    exprlog                        shift and go to state 228
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 182

    (147) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (148) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 232


state 183

    (57) gpopars -> IDENT . COMA gpopars2
    (58) gpopars -> IDENT .

    COMA            shift and go to state 233
    PUNTOS_DOBLES   reduce using rule 58 (gpopars -> IDENT .)
    error           reduce using rule 58 (gpopars -> IDENT .)


state 184

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 234


state 185

    (51) params -> gpopars . PUNTOS_DOBLES TIPO params2
    (53) params -> gpopars . PUNTOS_DOBLES error params2
    (54) params -> gpopars . error TIPO params2

    PUNTOS_DOBLES   shift and go to state 235
    error           shift and go to state 236


state 186

    (52) params -> empty .

    PAREN_TERMINA   reduce using rule 52 (params -> empty .)


state 187

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 237


state 188

    (40) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 238


state 189

    (46) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 239


state 190

    (47) protfunc -> FUNCION error PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 240


state 191

    (48) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 241


state 192

    (50) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 242


state 193

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 194

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    INICIO          reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)


state 195

    (7) gpovars -> gpoids error TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)


state 196

    (15) gpoidsinner -> IDENT COMA gpoidsinner .

    PUNTOS_DOBLES   reduce using rule 15 (gpoidsinner -> IDENT COMA gpoidsinner .)
    error           reduce using rule 15 (gpoidsinner -> IDENT COMA gpoidsinner .)


state 197

    (16) gpoidsinner -> IDENT opasig COMA . gpoidsinner
    (15) gpoidsinner -> . IDENT COMA gpoidsinner
    (16) gpoidsinner -> . IDENT opasig COMA gpoidsinner
    (17) gpoidsinner -> . IDENT
    (18) gpoidsinner -> . IDENT dimens COMA gpoidsinner
    (19) gpoidsinner -> . IDENT dimens
    (21) gpoidsinner -> . empty
    (153) empty -> .

    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoidsinner                    shift and go to state 243
    empty                          shift and go to state 65

state 198

    (18) gpoidsinner -> IDENT dimens COMA . gpoidsinner
    (15) gpoidsinner -> . IDENT COMA gpoidsinner
    (16) gpoidsinner -> . IDENT opasig COMA gpoidsinner
    (17) gpoidsinner -> . IDENT
    (18) gpoidsinner -> . IDENT dimens COMA gpoidsinner
    (19) gpoidsinner -> . IDENT dimens
    (21) gpoidsinner -> . empty
    (153) empty -> .

    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    gpoidsinner                    shift and go to state 244
    empty                          shift and go to state 65

state 199

    (138) lfunc -> IDENT PAREN_EMPIEZA uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 245


state 200

    (139) lfunc -> IDENT PAREN_EMPIEZA error . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 246


state 201

    (151) uparams -> exprlog .
    (152) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 151 (uparams -> exprlog .)
    COMA            shift and go to state 247


state 202

    (107) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim
    (115) oprel -> expr .
    (116) oprel -> expr . OP_REL oprel

  ! shift/reduce conflict for CORCHETE_TERMINA resolved as shift
    CORCHETE_TERMINA shift and go to state 248
    Y               reduce using rule 115 (oprel -> expr .)
    O               reduce using rule 115 (oprel -> expr .)
    error           reduce using rule 115 (oprel -> expr .)
    OP_REL          shift and go to state 153

  ! CORCHETE_TERMINA [ reduce using rule 115 (oprel -> expr .) ]


state 203

    (28) dimens -> error valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 28 (dimens -> error valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 28 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 28 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 28 (dimens -> error valor CORCHETE_TERMINA dimens .)


state 204

    (26) dimens -> empty .

    COMA            reduce using rule 26 (dimens -> empty .)
    error           reduce using rule 26 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 26 (dimens -> empty .)
    PAREN_TERMINA   reduce using rule 26 (dimens -> empty .)


state 205

    (110) exprlog -> opy O exprlog .

    CORCHETE_TERMINA reduce using rule 110 (exprlog -> opy O exprlog .)
    error           reduce using rule 110 (exprlog -> opy O exprlog .)
    COMA            reduce using rule 110 (exprlog -> opy O exprlog .)
    PAREN_TERMINA   reduce using rule 110 (exprlog -> opy O exprlog .)
    PUNTO_COMA      reduce using rule 110 (exprlog -> opy O exprlog .)
    HASTA           reduce using rule 110 (exprlog -> opy O exprlog .)
    SINO            reduce using rule 110 (exprlog -> opy O exprlog .)
    FIN             reduce using rule 110 (exprlog -> opy O exprlog .)
    SEA             reduce using rule 110 (exprlog -> opy O exprlog .)
    OTRO            reduce using rule 110 (exprlog -> opy O exprlog .)
    INICIO          reduce using rule 110 (exprlog -> opy O exprlog .)
    LIMPIA          reduce using rule 110 (exprlog -> opy O exprlog .)
    INTERRUMPE      reduce using rule 110 (exprlog -> opy O exprlog .)
    CONTINUA        reduce using rule 110 (exprlog -> opy O exprlog .)
    SI              reduce using rule 110 (exprlog -> opy O exprlog .)
    IDENT           reduce using rule 110 (exprlog -> opy O exprlog .)
    DESDE           reduce using rule 110 (exprlog -> opy O exprlog .)
    REPETIR         reduce using rule 110 (exprlog -> opy O exprlog .)
    MIENTRAS        reduce using rule 110 (exprlog -> opy O exprlog .)
    CUANDO          reduce using rule 110 (exprlog -> opy O exprlog .)
    REGRESA         reduce using rule 110 (exprlog -> opy O exprlog .)
    IMPRIME         reduce using rule 110 (exprlog -> opy O exprlog .)
    IMPRIMENL       reduce using rule 110 (exprlog -> opy O exprlog .)
    LEE             reduce using rule 110 (exprlog -> opy O exprlog .)


state 206

    (112) opy -> opno Y opy .

    O               reduce using rule 112 (opy -> opno Y opy .)
    CORCHETE_TERMINA reduce using rule 112 (opy -> opno Y opy .)
    error           reduce using rule 112 (opy -> opno Y opy .)
    COMA            reduce using rule 112 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 112 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 112 (opy -> opno Y opy .)
    HASTA           reduce using rule 112 (opy -> opno Y opy .)
    SINO            reduce using rule 112 (opy -> opno Y opy .)
    FIN             reduce using rule 112 (opy -> opno Y opy .)
    SEA             reduce using rule 112 (opy -> opno Y opy .)
    OTRO            reduce using rule 112 (opy -> opno Y opy .)
    INICIO          reduce using rule 112 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 112 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 112 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 112 (opy -> opno Y opy .)
    SI              reduce using rule 112 (opy -> opno Y opy .)
    IDENT           reduce using rule 112 (opy -> opno Y opy .)
    DESDE           reduce using rule 112 (opy -> opno Y opy .)
    REPETIR         reduce using rule 112 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 112 (opy -> opno Y opy .)
    CUANDO          reduce using rule 112 (opy -> opno Y opy .)
    REGRESA         reduce using rule 112 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 112 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 112 (opy -> opno Y opy .)
    LEE             reduce using rule 112 (opy -> opno Y opy .)


state 207

    (116) oprel -> expr OP_REL oprel .

    Y               reduce using rule 116 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 116 (oprel -> expr OP_REL oprel .)
    CORCHETE_TERMINA reduce using rule 116 (oprel -> expr OP_REL oprel .)
    error           reduce using rule 116 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 116 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 116 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 116 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 116 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 116 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 116 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 116 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 116 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 116 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 116 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 116 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 116 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 116 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 116 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 116 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 116 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 116 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 116 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 116 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 116 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 116 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 116 (oprel -> expr OP_REL oprel .)


state 208

    (118) expr -> multi MAS expr .

    OP_REL          reduce using rule 118 (expr -> multi MAS expr .)
    Y               reduce using rule 118 (expr -> multi MAS expr .)
    O               reduce using rule 118 (expr -> multi MAS expr .)
    CORCHETE_TERMINA reduce using rule 118 (expr -> multi MAS expr .)
    error           reduce using rule 118 (expr -> multi MAS expr .)
    COMA            reduce using rule 118 (expr -> multi MAS expr .)
    PAREN_TERMINA   reduce using rule 118 (expr -> multi MAS expr .)
    PUNTO_COMA      reduce using rule 118 (expr -> multi MAS expr .)
    HASTA           reduce using rule 118 (expr -> multi MAS expr .)
    SINO            reduce using rule 118 (expr -> multi MAS expr .)
    FIN             reduce using rule 118 (expr -> multi MAS expr .)
    SEA             reduce using rule 118 (expr -> multi MAS expr .)
    OTRO            reduce using rule 118 (expr -> multi MAS expr .)
    INICIO          reduce using rule 118 (expr -> multi MAS expr .)
    LIMPIA          reduce using rule 118 (expr -> multi MAS expr .)
    INTERRUMPE      reduce using rule 118 (expr -> multi MAS expr .)
    CONTINUA        reduce using rule 118 (expr -> multi MAS expr .)
    SI              reduce using rule 118 (expr -> multi MAS expr .)
    IDENT           reduce using rule 118 (expr -> multi MAS expr .)
    DESDE           reduce using rule 118 (expr -> multi MAS expr .)
    REPETIR         reduce using rule 118 (expr -> multi MAS expr .)
    MIENTRAS        reduce using rule 118 (expr -> multi MAS expr .)
    CUANDO          reduce using rule 118 (expr -> multi MAS expr .)
    REGRESA         reduce using rule 118 (expr -> multi MAS expr .)
    IMPRIME         reduce using rule 118 (expr -> multi MAS expr .)
    IMPRIMENL       reduce using rule 118 (expr -> multi MAS expr .)
    LEE             reduce using rule 118 (expr -> multi MAS expr .)
    DECR            reduce using rule 118 (expr -> multi MAS expr .)
    INCR            reduce using rule 118 (expr -> multi MAS expr .)


state 209

    (119) expr -> multi MENOS expr .

    OP_REL          reduce using rule 119 (expr -> multi MENOS expr .)
    Y               reduce using rule 119 (expr -> multi MENOS expr .)
    O               reduce using rule 119 (expr -> multi MENOS expr .)
    CORCHETE_TERMINA reduce using rule 119 (expr -> multi MENOS expr .)
    error           reduce using rule 119 (expr -> multi MENOS expr .)
    COMA            reduce using rule 119 (expr -> multi MENOS expr .)
    PAREN_TERMINA   reduce using rule 119 (expr -> multi MENOS expr .)
    PUNTO_COMA      reduce using rule 119 (expr -> multi MENOS expr .)
    HASTA           reduce using rule 119 (expr -> multi MENOS expr .)
    SINO            reduce using rule 119 (expr -> multi MENOS expr .)
    FIN             reduce using rule 119 (expr -> multi MENOS expr .)
    SEA             reduce using rule 119 (expr -> multi MENOS expr .)
    OTRO            reduce using rule 119 (expr -> multi MENOS expr .)
    INICIO          reduce using rule 119 (expr -> multi MENOS expr .)
    LIMPIA          reduce using rule 119 (expr -> multi MENOS expr .)
    INTERRUMPE      reduce using rule 119 (expr -> multi MENOS expr .)
    CONTINUA        reduce using rule 119 (expr -> multi MENOS expr .)
    SI              reduce using rule 119 (expr -> multi MENOS expr .)
    IDENT           reduce using rule 119 (expr -> multi MENOS expr .)
    DESDE           reduce using rule 119 (expr -> multi MENOS expr .)
    REPETIR         reduce using rule 119 (expr -> multi MENOS expr .)
    MIENTRAS        reduce using rule 119 (expr -> multi MENOS expr .)
    CUANDO          reduce using rule 119 (expr -> multi MENOS expr .)
    REGRESA         reduce using rule 119 (expr -> multi MENOS expr .)
    IMPRIME         reduce using rule 119 (expr -> multi MENOS expr .)
    IMPRIMENL       reduce using rule 119 (expr -> multi MENOS expr .)
    LEE             reduce using rule 119 (expr -> multi MENOS expr .)
    DECR            reduce using rule 119 (expr -> multi MENOS expr .)
    INCR            reduce using rule 119 (expr -> multi MENOS expr .)


state 210

    (121) multi -> expo MULTI multi .

    MAS             reduce using rule 121 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 121 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 121 (multi -> expo MULTI multi .)
    Y               reduce using rule 121 (multi -> expo MULTI multi .)
    O               reduce using rule 121 (multi -> expo MULTI multi .)
    CORCHETE_TERMINA reduce using rule 121 (multi -> expo MULTI multi .)
    error           reduce using rule 121 (multi -> expo MULTI multi .)
    COMA            reduce using rule 121 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 121 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 121 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 121 (multi -> expo MULTI multi .)
    SINO            reduce using rule 121 (multi -> expo MULTI multi .)
    FIN             reduce using rule 121 (multi -> expo MULTI multi .)
    SEA             reduce using rule 121 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 121 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 121 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 121 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 121 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 121 (multi -> expo MULTI multi .)
    SI              reduce using rule 121 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 121 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 121 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 121 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 121 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 121 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 121 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 121 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 121 (multi -> expo MULTI multi .)
    LEE             reduce using rule 121 (multi -> expo MULTI multi .)
    DECR            reduce using rule 121 (multi -> expo MULTI multi .)
    INCR            reduce using rule 121 (multi -> expo MULTI multi .)


state 211

    (122) multi -> expo DIV multi .

    MAS             reduce using rule 122 (multi -> expo DIV multi .)
    MENOS           reduce using rule 122 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 122 (multi -> expo DIV multi .)
    Y               reduce using rule 122 (multi -> expo DIV multi .)
    O               reduce using rule 122 (multi -> expo DIV multi .)
    CORCHETE_TERMINA reduce using rule 122 (multi -> expo DIV multi .)
    error           reduce using rule 122 (multi -> expo DIV multi .)
    COMA            reduce using rule 122 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 122 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 122 (multi -> expo DIV multi .)
    HASTA           reduce using rule 122 (multi -> expo DIV multi .)
    SINO            reduce using rule 122 (multi -> expo DIV multi .)
    FIN             reduce using rule 122 (multi -> expo DIV multi .)
    SEA             reduce using rule 122 (multi -> expo DIV multi .)
    OTRO            reduce using rule 122 (multi -> expo DIV multi .)
    INICIO          reduce using rule 122 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 122 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 122 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 122 (multi -> expo DIV multi .)
    SI              reduce using rule 122 (multi -> expo DIV multi .)
    IDENT           reduce using rule 122 (multi -> expo DIV multi .)
    DESDE           reduce using rule 122 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 122 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 122 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 122 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 122 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 122 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 122 (multi -> expo DIV multi .)
    LEE             reduce using rule 122 (multi -> expo DIV multi .)
    DECR            reduce using rule 122 (multi -> expo DIV multi .)
    INCR            reduce using rule 122 (multi -> expo DIV multi .)


state 212

    (123) multi -> expo MOD multi .

    MAS             reduce using rule 123 (multi -> expo MOD multi .)
    MENOS           reduce using rule 123 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 123 (multi -> expo MOD multi .)
    Y               reduce using rule 123 (multi -> expo MOD multi .)
    O               reduce using rule 123 (multi -> expo MOD multi .)
    CORCHETE_TERMINA reduce using rule 123 (multi -> expo MOD multi .)
    error           reduce using rule 123 (multi -> expo MOD multi .)
    COMA            reduce using rule 123 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 123 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 123 (multi -> expo MOD multi .)
    HASTA           reduce using rule 123 (multi -> expo MOD multi .)
    SINO            reduce using rule 123 (multi -> expo MOD multi .)
    FIN             reduce using rule 123 (multi -> expo MOD multi .)
    SEA             reduce using rule 123 (multi -> expo MOD multi .)
    OTRO            reduce using rule 123 (multi -> expo MOD multi .)
    INICIO          reduce using rule 123 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 123 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 123 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 123 (multi -> expo MOD multi .)
    SI              reduce using rule 123 (multi -> expo MOD multi .)
    IDENT           reduce using rule 123 (multi -> expo MOD multi .)
    DESDE           reduce using rule 123 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 123 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 123 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 123 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 123 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 123 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 123 (multi -> expo MOD multi .)
    LEE             reduce using rule 123 (multi -> expo MOD multi .)
    DECR            reduce using rule 123 (multi -> expo MOD multi .)
    INCR            reduce using rule 123 (multi -> expo MOD multi .)


state 213

    (126) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 126 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 126 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 126 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 126 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 126 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 126 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 126 (expo -> signo POTENCIA expo .)
    O               reduce using rule 126 (expo -> signo POTENCIA expo .)
    CORCHETE_TERMINA reduce using rule 126 (expo -> signo POTENCIA expo .)
    error           reduce using rule 126 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 126 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 126 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 126 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 126 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 126 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 126 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 126 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 126 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 126 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 126 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 126 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 126 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 126 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 126 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 126 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 126 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 126 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 126 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 126 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 126 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 126 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 126 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 126 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 126 (expo -> signo POTENCIA expo .)


state 214

    (25) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 25 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 25 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 25 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 215

    (27) dimens -> CORCHETE_EMPIEZA valor error dimens .

    COMA            reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    error           reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PUNTOS_DOBLES   reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PAREN_TERMINA   reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor error dimens .)


state 216

    (107) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim

    CORCHETE_TERMINA shift and go to state 248


state 217

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA PUNTO

    PROGRAMA        shift and go to state 249


state 218

    (66) block -> estatuto PUNTO_COMA block .

    FIN             reduce using rule 66 (block -> estatuto PUNTO_COMA block .)
    HASTA           reduce using rule 66 (block -> estatuto PUNTO_COMA block .)


state 219

    (69) block -> estatuto error block .

    FIN             reduce using rule 69 (block -> estatuto error block .)
    HASTA           reduce using rule 69 (block -> estatuto error block .)


state 220

    (85) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 250


state 221

    (96) asigna -> IDENT udim OP_ASIG . exprlog
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    HASTA           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! HASTA           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 251
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 222

    (91) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> DESDE EL VALOR . DE asigna HASTA expr error bckesp

    DE              shift and go to state 252


state 223

    (94) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 253


state 224

    (95) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 254


state 225

    (97) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 255


state 226

    (106) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 256


state 227

    (140) imprime -> IMPRIME begin gpoexp . PAREN_TERMINA
    (143) imprime -> IMPRIME begin gpoexp . error

    PAREN_TERMINA   shift and go to state 257
    error           shift and go to state 258


state 228

    (149) gpoexp -> exprlog .
    (150) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 149 (gpoexp -> exprlog .)
    error           reduce using rule 149 (gpoexp -> exprlog .)
    COMA            shift and go to state 259


state 229

    (142) imprime -> IMPRIME error gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 260


state 230

    (144) imprimenl -> IMPRIMENL begin gpoexp . PAREN_TERMINA
    (145) imprimenl -> IMPRIMENL begin gpoexp . error

    PAREN_TERMINA   shift and go to state 261
    error           shift and go to state 262


state 231

    (146) imprimenl -> IMPRIMENL error gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 263


state 232

    (147) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (148) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (25) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (26) dimens -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (28) dimens -> . error valor CORCHETE_TERMINA dimens
    (153) empty -> .

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 264
    CORCHETE_EMPIEZA shift and go to state 43
    error           shift and go to state 139

  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]

    dimens                         shift and go to state 265
    empty                          shift and go to state 204

state 233

    (57) gpopars -> IDENT COMA . gpopars2
    (59) gpopars2 -> . IDENT COMA gpopars2
    (60) gpopars2 -> . IDENT

    IDENT           shift and go to state 266

    gpopars2                       shift and go to state 267

state 234

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (153) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 153 (empty -> .)

    variables                      shift and go to state 268
    empty                          shift and go to state 7

state 235

    (51) params -> gpopars PUNTOS_DOBLES . TIPO params2
    (53) params -> gpopars PUNTOS_DOBLES . error params2

    TIPO            shift and go to state 269
    error           shift and go to state 270


state 236

    (54) params -> gpopars error . TIPO params2

    TIPO            shift and go to state 271


state 237

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 272


state 238

    (40) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 40 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 40 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 40 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 239

    (46) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 273


state 240

    (47) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 274


state 241

    (48) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 275


state 242

    (50) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 276


state 243

    (16) gpoidsinner -> IDENT opasig COMA gpoidsinner .

    PUNTOS_DOBLES   reduce using rule 16 (gpoidsinner -> IDENT opasig COMA gpoidsinner .)
    error           reduce using rule 16 (gpoidsinner -> IDENT opasig COMA gpoidsinner .)


state 244

    (18) gpoidsinner -> IDENT dimens COMA gpoidsinner .

    PUNTOS_DOBLES   reduce using rule 18 (gpoidsinner -> IDENT dimens COMA gpoidsinner .)
    error           reduce using rule 18 (gpoidsinner -> IDENT dimens COMA gpoidsinner .)


state 245

    (138) lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .

    POTENCIA        reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MULTI           reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DIV             reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MOD             reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MAS             reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MENOS           reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    Y               reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    O               reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    error           reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    COMA            reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    HASTA           reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SINO            reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    FIN             reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SEA             reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OTRO            reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INICIO          reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SI              reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IDENT           reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DESDE           reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    LEE             reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DECR            reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INCR            reduce using rule 138 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)


state 246

    (139) lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .

    POTENCIA        reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    MULTI           reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    DIV             reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    MOD             reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    MAS             reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    MENOS           reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    OP_REL          reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    Y               reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    O               reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    error           reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    COMA            reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    HASTA           reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    SINO            reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    FIN             reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    SEA             reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    OTRO            reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    INICIO          reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    LIMPIA          reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    CONTINUA        reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    SI              reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    IDENT           reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    DESDE           reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    REPETIR         reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    MIENTRAS        reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    CUANDO          reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    REGRESA         reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    IMPRIME         reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    LEE             reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    DECR            reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)
    INCR            reduce using rule 139 (lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA .)


state 247

    (152) uparams -> exprlog COMA . uparams
    (151) uparams -> . exprlog
    (152) uparams -> . exprlog COMA uparams
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 201
    uparams                        shift and go to state 277
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 248

    (107) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA . udim
    (107) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (108) udim -> . empty
    (153) empty -> .

    CORCHETE_EMPIEZA shift and go to state 163
    POTENCIA        reduce using rule 153 (empty -> .)
    MULTI           reduce using rule 153 (empty -> .)
    DIV             reduce using rule 153 (empty -> .)
    MOD             reduce using rule 153 (empty -> .)
    MAS             reduce using rule 153 (empty -> .)
    MENOS           reduce using rule 153 (empty -> .)
    OP_REL          reduce using rule 153 (empty -> .)
    Y               reduce using rule 153 (empty -> .)
    O               reduce using rule 153 (empty -> .)
    CORCHETE_TERMINA reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    COMA            reduce using rule 153 (empty -> .)
    PAREN_TERMINA   reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    HASTA           reduce using rule 153 (empty -> .)
    SINO            reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    INICIO          reduce using rule 153 (empty -> .)
    LIMPIA          reduce using rule 153 (empty -> .)
    INTERRUMPE      reduce using rule 153 (empty -> .)
    CONTINUA        reduce using rule 153 (empty -> .)
    SI              reduce using rule 153 (empty -> .)
    IDENT           reduce using rule 153 (empty -> .)
    DESDE           reduce using rule 153 (empty -> .)
    REPETIR         reduce using rule 153 (empty -> .)
    MIENTRAS        reduce using rule 153 (empty -> .)
    CUANDO          reduce using rule 153 (empty -> .)
    REGRESA         reduce using rule 153 (empty -> .)
    IMPRIME         reduce using rule 153 (empty -> .)
    IMPRIMENL       reduce using rule 153 (empty -> .)
    LEE             reduce using rule 153 (empty -> .)
    DECR            reduce using rule 153 (empty -> .)
    INCR            reduce using rule 153 (empty -> .)
    OP_ASIG         reduce using rule 153 (empty -> .)

    udim                           shift and go to state 278
    empty                          shift and go to state 164

state 249

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA . PUNTO

    PUNTO           shift and go to state 279


state 250

    (85) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 280


state 251

    (96) asigna -> IDENT udim OP_ASIG exprlog .

    PUNTO_COMA      reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)
    error           reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 96 (asigna -> IDENT udim OP_ASIG exprlog .)


state 252

    (91) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> DESDE EL VALOR DE . asigna HASTA expr error bckesp
    (96) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 282

    asigna                         shift and go to state 281

state 253

    (94) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 283


state 254

    (95) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    INICIO          reduce using rule 135 (termino -> .)
    LIMPIA          reduce using rule 135 (termino -> .)
    INTERRUMPE      reduce using rule 135 (termino -> .)
    CONTINUA        reduce using rule 135 (termino -> .)
    SI              reduce using rule 135 (termino -> .)
    DESDE           reduce using rule 135 (termino -> .)
    REPETIR         reduce using rule 135 (termino -> .)
    MIENTRAS        reduce using rule 135 (termino -> .)
    CUANDO          reduce using rule 135 (termino -> .)
    REGRESA         reduce using rule 135 (termino -> .)
    IMPRIME         reduce using rule 135 (termino -> .)
    IMPRIMENL       reduce using rule 135 (termino -> .)
    LEE             reduce using rule 135 (termino -> .)
    PUNTO_COMA      reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)
    SINO            reduce using rule 135 (termino -> .)
    FIN             reduce using rule 135 (termino -> .)
    SEA             reduce using rule 135 (termino -> .)
    OTRO            reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! INICIO          [ reduce using rule 153 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 153 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 153 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 153 (empty -> .) ]
  ! SI              [ reduce using rule 153 (empty -> .) ]
  ! IDENT           [ reduce using rule 153 (empty -> .) ]
  ! DESDE           [ reduce using rule 153 (empty -> .) ]
  ! REPETIR         [ reduce using rule 153 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 153 (empty -> .) ]
  ! CUANDO          [ reduce using rule 153 (empty -> .) ]
  ! REGRESA         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 153 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 153 (empty -> .) ]
  ! LEE             [ reduce using rule 153 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! SINO            [ reduce using rule 153 (empty -> .) ]
  ! FIN             [ reduce using rule 153 (empty -> .) ]
  ! SEA             [ reduce using rule 153 (empty -> .) ]
  ! OTRO            [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]
  ! IDENT           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 284
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 255

    (97) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 285


state 256

    (106) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 106 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    error           reduce using rule 106 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 106 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 106 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 106 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 106 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 257

    (140) imprime -> IMPRIME begin gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 140 (imprime -> IMPRIME begin gpoexp PAREN_TERMINA .)
    error           reduce using rule 140 (imprime -> IMPRIME begin gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 140 (imprime -> IMPRIME begin gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 140 (imprime -> IMPRIME begin gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 140 (imprime -> IMPRIME begin gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 140 (imprime -> IMPRIME begin gpoexp PAREN_TERMINA .)


state 258

    (143) imprime -> IMPRIME begin gpoexp error .

    PUNTO_COMA      reduce using rule 143 (imprime -> IMPRIME begin gpoexp error .)
    error           reduce using rule 143 (imprime -> IMPRIME begin gpoexp error .)
    SINO            reduce using rule 143 (imprime -> IMPRIME begin gpoexp error .)
    FIN             reduce using rule 143 (imprime -> IMPRIME begin gpoexp error .)
    SEA             reduce using rule 143 (imprime -> IMPRIME begin gpoexp error .)
    OTRO            reduce using rule 143 (imprime -> IMPRIME begin gpoexp error .)


state 259

    (150) gpoexp -> exprlog COMA . gpoexp
    (149) gpoexp -> . exprlog
    (150) gpoexp -> . exprlog COMA gpoexp
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    COMA            reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! COMA            [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 228
    gpoexp                         shift and go to state 286
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 260

    (142) imprime -> IMPRIME error gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 142 (imprime -> IMPRIME error gpoexp PAREN_TERMINA .)
    error           reduce using rule 142 (imprime -> IMPRIME error gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 142 (imprime -> IMPRIME error gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 142 (imprime -> IMPRIME error gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 142 (imprime -> IMPRIME error gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 142 (imprime -> IMPRIME error gpoexp PAREN_TERMINA .)


state 261

    (144) imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 144 (imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .)
    error           reduce using rule 144 (imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 144 (imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 144 (imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 144 (imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 144 (imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA .)


state 262

    (145) imprimenl -> IMPRIMENL begin gpoexp error .

    PUNTO_COMA      reduce using rule 145 (imprimenl -> IMPRIMENL begin gpoexp error .)
    error           reduce using rule 145 (imprimenl -> IMPRIMENL begin gpoexp error .)
    SINO            reduce using rule 145 (imprimenl -> IMPRIMENL begin gpoexp error .)
    FIN             reduce using rule 145 (imprimenl -> IMPRIMENL begin gpoexp error .)
    SEA             reduce using rule 145 (imprimenl -> IMPRIMENL begin gpoexp error .)
    OTRO            reduce using rule 145 (imprimenl -> IMPRIMENL begin gpoexp error .)


state 263

    (146) imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 146 (imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .)
    error           reduce using rule 146 (imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 146 (imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 146 (imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 146 (imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 146 (imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA .)


state 264

    (147) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    error           reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 265

    (148) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 287


state 266

    (59) gpopars2 -> IDENT . COMA gpopars2
    (60) gpopars2 -> IDENT .

    COMA            shift and go to state 288
    PUNTOS_DOBLES   reduce using rule 60 (gpopars2 -> IDENT .)
    error           reduce using rule 60 (gpopars2 -> IDENT .)


state 267

    (57) gpopars -> IDENT COMA gpopars2 .

    PUNTOS_DOBLES   reduce using rule 57 (gpopars -> IDENT COMA gpopars2 .)
    error           reduce using rule 57 (gpopars -> IDENT COMA gpopars2 .)


state 268

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 289


state 269

    (51) params -> gpopars PUNTOS_DOBLES TIPO . params2
    (55) params2 -> . PUNTO_COMA params
    (56) params2 -> . empty
    (153) empty -> .

    PUNTO_COMA      shift and go to state 291
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params2                        shift and go to state 290
    empty                          shift and go to state 292

state 270

    (53) params -> gpopars PUNTOS_DOBLES error . params2
    (55) params2 -> . PUNTO_COMA params
    (56) params2 -> . empty
    (153) empty -> .

    PUNTO_COMA      shift and go to state 291
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params2                        shift and go to state 293
    empty                          shift and go to state 292

state 271

    (54) params -> gpopars error TIPO . params2
    (55) params2 -> . PUNTO_COMA params
    (56) params2 -> . empty
    (153) empty -> .

    PUNTO_COMA      shift and go to state 291
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params2                        shift and go to state 294
    empty                          shift and go to state 292

state 272

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 295


state 273

    (46) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 296


state 274

    (47) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 297


state 275

    (48) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 48 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 48 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 48 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 276

    (50) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 50 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 50 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 50 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 277

    (152) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 152 (uparams -> exprlog COMA uparams .)


state 278

    (107) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .

    POTENCIA        reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MULTI           reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DIV             reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MOD             reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MAS             reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MENOS           reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_REL          reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    Y               reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    O               reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CORCHETE_TERMINA reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    error           reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    COMA            reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PAREN_TERMINA   reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PUNTO_COMA      reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    HASTA           reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SINO            reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    FIN             reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SEA             reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OTRO            reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INICIO          reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LIMPIA          reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INTERRUMPE      reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CONTINUA        reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SI              reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IDENT           reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DESDE           reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REPETIR         reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MIENTRAS        reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CUANDO          reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REGRESA         reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIME         reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIMENL       reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LEE             reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DECR            reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INCR            reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_ASIG         reduce using rule 107 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)


state 279

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .)


state 280

    (85) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SINO            reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    bckesp                         shift and go to state 298
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 281

    (91) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> DESDE EL VALOR DE asigna . HASTA expr error bckesp

    HASTA           shift and go to state 302


state 282

    (96) asigna -> IDENT . udim OP_ASIG exprlog
    (107) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (108) udim -> . empty
    (153) empty -> .

    CORCHETE_EMPIEZA shift and go to state 163
    OP_ASIG         reduce using rule 153 (empty -> .)

    udim                           shift and go to state 171
    empty                          shift and go to state 164

state 283

    (94) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (109) exprlog -> . opy
    (110) exprlog -> . opy O exprlog
    (111) opy -> . opno
    (112) opy -> . opno Y opy
    (113) opno -> . oprel
    (114) opno -> . NO oprel
    (115) oprel -> . expr
    (116) oprel -> . expr OP_REL oprel
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 135 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    OP_REL          reduce using rule 135 (termino -> .)
    Y               reduce using rule 135 (termino -> .)
    O               reduce using rule 135 (termino -> .)
    PAREN_TERMINA   reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! OP_REL          [ reduce using rule 153 (empty -> .) ]
  ! Y               [ reduce using rule 153 (empty -> .) ]
  ! O               [ reduce using rule 153 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    exprlog                        shift and go to state 303
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 284

    (95) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SINO            reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    bckesp                         shift and go to state 304
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 285

    (97) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 305


state 286

    (150) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 150 (gpoexp -> exprlog COMA gpoexp .)
    error           reduce using rule 150 (gpoexp -> exprlog COMA gpoexp .)


state 287

    (148) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    error           reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 288

    (59) gpopars2 -> IDENT COMA . gpopars2
    (59) gpopars2 -> . IDENT COMA gpopars2
    (60) gpopars2 -> . IDENT

    IDENT           shift and go to state 266

    gpopars2                       shift and go to state 306

state 289

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    block                          shift and go to state 307
    estatuto                       shift and go to state 100
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 290

    (51) params -> gpopars PUNTOS_DOBLES TIPO params2 .

    PAREN_TERMINA   reduce using rule 51 (params -> gpopars PUNTOS_DOBLES TIPO params2 .)


state 291

    (55) params2 -> PUNTO_COMA . params
    (51) params -> . gpopars PUNTOS_DOBLES TIPO params2
    (52) params -> . empty
    (53) params -> . gpopars PUNTOS_DOBLES error params2
    (54) params -> . gpopars error TIPO params2
    (57) gpopars -> . IDENT COMA gpopars2
    (58) gpopars -> . IDENT
    (153) empty -> .

    IDENT           shift and go to state 183
    PAREN_TERMINA   reduce using rule 153 (empty -> .)

    params                         shift and go to state 308
    gpopars                        shift and go to state 185
    empty                          shift and go to state 186

state 292

    (56) params2 -> empty .

    PAREN_TERMINA   reduce using rule 56 (params2 -> empty .)


state 293

    (53) params -> gpopars PUNTOS_DOBLES error params2 .

    PAREN_TERMINA   reduce using rule 53 (params -> gpopars PUNTOS_DOBLES error params2 .)


state 294

    (54) params -> gpopars error TIPO params2 .

    PAREN_TERMINA   reduce using rule 54 (params -> gpopars error TIPO params2 .)


state 295

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (153) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 153 (empty -> .)

    variables                      shift and go to state 309
    empty                          shift and go to state 7

state 296

    (46) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 310


state 297

    (47) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 311


state 298

    (85) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (86) sino -> . SINO bckesp
    (87) sino -> . empty
    (153) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 313
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)

  ! SINO            [ reduce using rule 153 (empty -> .) ]

    sino                           shift and go to state 312
    empty                          shift and go to state 314

state 299

    (88) bckesp -> estatuto .

    SINO            reduce using rule 88 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> estatuto .)
    error           reduce using rule 88 (bckesp -> estatuto .)
    FIN             reduce using rule 88 (bckesp -> estatuto .)
    SEA             reduce using rule 88 (bckesp -> estatuto .)
    OTRO            reduce using rule 88 (bckesp -> estatuto .)


state 300

    (89) bckesp -> INICIO . block FIN
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    block                          shift and go to state 315
    estatuto                       shift and go to state 100
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 301

    (90) bckesp -> empty .
    (84) estatuto -> empty .

  ! reduce/reduce conflict for SINO resolved using rule 84 (estatuto -> empty .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 84 (estatuto -> empty .)
  ! reduce/reduce conflict for error resolved using rule 84 (estatuto -> empty .)
  ! reduce/reduce conflict for FIN resolved using rule 84 (estatuto -> empty .)
  ! reduce/reduce conflict for SEA resolved using rule 84 (estatuto -> empty .)
  ! reduce/reduce conflict for OTRO resolved using rule 84 (estatuto -> empty .)
    SINO            reduce using rule 84 (estatuto -> empty .)
    PUNTO_COMA      reduce using rule 84 (estatuto -> empty .)
    error           reduce using rule 84 (estatuto -> empty .)
    FIN             reduce using rule 84 (estatuto -> empty .)
    SEA             reduce using rule 84 (estatuto -> empty .)
    OTRO            reduce using rule 84 (estatuto -> empty .)

  ! SINO            [ reduce using rule 90 (bckesp -> empty .) ]
  ! PUNTO_COMA      [ reduce using rule 90 (bckesp -> empty .) ]
  ! error           [ reduce using rule 90 (bckesp -> empty .) ]
  ! FIN             [ reduce using rule 90 (bckesp -> empty .) ]
  ! SEA             [ reduce using rule 90 (bckesp -> empty .) ]
  ! OTRO            [ reduce using rule 90 (bckesp -> empty .) ]


state 302

    (91) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (92) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (93) desde -> DESDE EL VALOR DE asigna HASTA . expr error bckesp
    (117) expr -> . multi
    (118) expr -> . multi MAS expr
    (119) expr -> . multi MENOS expr
    (120) multi -> . expo
    (121) multi -> . expo MULTI multi
    (122) multi -> . expo DIV multi
    (123) multi -> . expo MOD multi
    (124) multi -> . empty
    (125) expo -> . signo
    (126) expo -> . signo POTENCIA expo
    (153) empty -> .
    (127) signo -> . termino
    (128) signo -> . MENOS termino
    (129) termino -> . IDENT
    (130) termino -> . CTE_ENTERA
    (131) termino -> . CTE_REAL
    (132) termino -> . CTE_ALFA
    (133) termino -> . VERDADERO
    (134) termino -> . FALSO
    (135) termino -> .
    (136) termino -> . IDENT udim
    (137) termino -> . lfunc
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 135 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for DECR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 135 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 135 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 135 (termino -> .)
    MULTI           reduce using rule 135 (termino -> .)
    DIV             reduce using rule 135 (termino -> .)
    MOD             reduce using rule 135 (termino -> .)
    MAS             reduce using rule 135 (termino -> .)
    DECR            reduce using rule 135 (termino -> .)
    INCR            reduce using rule 135 (termino -> .)
    error           reduce using rule 135 (termino -> .)

  ! MAS             [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 153 (empty -> .) ]
  ! DECR            [ reduce using rule 153 (empty -> .) ]
  ! INCR            [ reduce using rule 153 (empty -> .) ]
  ! error           [ reduce using rule 153 (empty -> .) ]
  ! MENOS           [ reduce using rule 135 (termino -> .) ]

    expr                           shift and go to state 316
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 303

    (94) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 317


state 304

    (95) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    PUNTO_COMA      reduce using rule 95 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    error           reduce using rule 95 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 95 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 95 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 95 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 95 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 305

    (97) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (100) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (101) gposea -> . empty
    (153) empty -> .

    SEA             shift and go to state 319
    OTRO            reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)

    gposea                         shift and go to state 318
    empty                          shift and go to state 320

state 306

    (59) gpopars2 -> IDENT COMA gpopars2 .

    PUNTOS_DOBLES   reduce using rule 59 (gpopars2 -> IDENT COMA gpopars2 .)
    error           reduce using rule 59 (gpopars2 -> IDENT COMA gpopars2 .)


state 307

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 321


state 308

    (55) params2 -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 55 (params2 -> PUNTO_COMA params .)


state 309

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 322


state 310

    (46) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 46 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 46 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 46 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 311

    (47) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 47 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 47 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 47 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 312

    (85) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    PUNTO_COMA      reduce using rule 85 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    error           reduce using rule 85 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 85 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 85 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 85 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 85 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 313

    (86) sino -> SINO . bckesp
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SINO            reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    bckesp                         shift and go to state 323
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 314

    (87) sino -> empty .

    SINO            reduce using rule 87 (sino -> empty .)
    PUNTO_COMA      reduce using rule 87 (sino -> empty .)
    error           reduce using rule 87 (sino -> empty .)
    FIN             reduce using rule 87 (sino -> empty .)
    SEA             reduce using rule 87 (sino -> empty .)
    OTRO            reduce using rule 87 (sino -> empty .)


state 315

    (89) bckesp -> INICIO block . FIN

    FIN             shift and go to state 324


state 316

    (91) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp
    (92) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (93) desde -> DESDE EL VALOR DE asigna HASTA expr . error bckesp

    DECR            shift and go to state 325
    INCR            shift and go to state 326
    error           shift and go to state 327


state 317

    (94) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 94 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    error           reduce using rule 94 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 94 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 94 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 94 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 94 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 318

    (97) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (98) otro -> . OTRO PUNTOS_DOBLES bckesp
    (99) otro -> . empty
    (153) empty -> .

    OTRO            shift and go to state 329
    FIN             reduce using rule 153 (empty -> .)

    otro                           shift and go to state 328
    empty                          shift and go to state 330

state 319

    (100) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (35) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (36) gpoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst
    (37) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (38) gpoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst
    (39) gpoconst -> . empty
    (102) gpoconst -> . CTE_ALFA gpoconst2
    (153) empty -> .

    IDENT           shift and go to state 9
    CTE_ALFA        shift and go to state 11
    PUNTOS_DOBLES   reduce using rule 153 (empty -> .)

    gpoconst                       shift and go to state 331
    empty                          shift and go to state 10

state 320

    (101) gposea -> empty .

    OTRO            reduce using rule 101 (gposea -> empty .)
    FIN             reduce using rule 101 (gposea -> empty .)


state 321

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 332


state 322

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (66) block -> . estatuto PUNTO_COMA block
    (67) block -> . estatuto PUNTO_COMA
    (68) block -> . estatuto error
    (69) block -> . estatuto error block
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (153) empty -> .

    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)

    block                          shift and go to state 333
    estatuto                       shift and go to state 100
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112
    empty                          shift and go to state 115

state 323

    (86) sino -> SINO bckesp .

    SINO            reduce using rule 86 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 86 (sino -> SINO bckesp .)
    error           reduce using rule 86 (sino -> SINO bckesp .)
    FIN             reduce using rule 86 (sino -> SINO bckesp .)
    SEA             reduce using rule 86 (sino -> SINO bckesp .)
    OTRO            reduce using rule 86 (sino -> SINO bckesp .)


state 324

    (89) bckesp -> INICIO block FIN .

    SINO            reduce using rule 89 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 89 (bckesp -> INICIO block FIN .)
    error           reduce using rule 89 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 89 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 89 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 89 (bckesp -> INICIO block FIN .)


state 325

    (91) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 334


state 326

    (92) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 335


state 327

    (93) desde -> DESDE EL VALOR DE asigna HASTA expr error . bckesp
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SINO            reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    asigna                         shift and go to state 109
    bckesp                         shift and go to state 336
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 328

    (97) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 337


state 329

    (98) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 338


state 330

    (99) otro -> empty .

    FIN             reduce using rule 99 (otro -> empty .)


state 331

    (100) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 339


state 332

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 340


state 333

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 341


state 334

    (91) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SINO            reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    asigna                         shift and go to state 109
    bckesp                         shift and go to state 342
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 335

    (92) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SINO            reduce using rule 153 (empty -> .)
    PUNTO_COMA      reduce using rule 153 (empty -> .)
    error           reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    asigna                         shift and go to state 109
    bckesp                         shift and go to state 343
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 336

    (93) desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .

    PUNTO_COMA      reduce using rule 93 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    error           reduce using rule 93 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SINO            reduce using rule 93 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    FIN             reduce using rule 93 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SEA             reduce using rule 93 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    OTRO            reduce using rule 93 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)


state 337

    (97) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    PUNTO_COMA      reduce using rule 97 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    error           reduce using rule 97 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 97 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 97 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 97 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 97 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 338

    (98) otro -> OTRO PUNTOS_DOBLES . bckesp
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    FIN             reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    bckesp                         shift and go to state 344
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 339

    (100) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (88) bckesp -> . estatuto
    (89) bckesp -> . INICIO block FIN
    (90) bckesp -> . empty
    (70) estatuto -> . si
    (71) estatuto -> . lfunc
    (72) estatuto -> . LIMPIA
    (73) estatuto -> . desde
    (74) estatuto -> . repetir
    (75) estatuto -> . mientras
    (76) estatuto -> . cuando
    (77) estatuto -> . regresa
    (78) estatuto -> . asigna
    (79) estatuto -> . imprime
    (80) estatuto -> . imprimenl
    (81) estatuto -> . lee
    (82) estatuto -> . INTERRUMPE
    (83) estatuto -> . CONTINUA
    (84) estatuto -> . empty
    (153) empty -> .
    (85) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (138) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (139) lfunc -> . IDENT PAREN_EMPIEZA error PAREN_TERMINA
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (92) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (93) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (94) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (95) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (97) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (106) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (96) asigna -> . IDENT udim OP_ASIG exprlog
    (140) imprime -> . IMPRIME begin gpoexp PAREN_TERMINA
    (142) imprime -> . IMPRIME error gpoexp PAREN_TERMINA
    (143) imprime -> . IMPRIME begin gpoexp error
    (144) imprimenl -> . IMPRIMENL begin gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL begin gpoexp error
    (146) imprimenl -> . IMPRIMENL error gpoexp PAREN_TERMINA
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 300
    LIMPIA          shift and go to state 103
    INTERRUMPE      shift and go to state 113
    CONTINUA        shift and go to state 114
    SEA             reduce using rule 153 (empty -> .)
    OTRO            reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)
    SI              shift and go to state 116
    IDENT           shift and go to state 117
    DESDE           shift and go to state 118
    REPETIR         shift and go to state 119
    MIENTRAS        shift and go to state 120
    CUANDO          shift and go to state 121
    REGRESA         shift and go to state 122
    IMPRIME         shift and go to state 123
    IMPRIMENL       shift and go to state 124
    LEE             shift and go to state 125

    bckesp                         shift and go to state 345
    estatuto                       shift and go to state 299
    empty                          shift and go to state 301
    si                             shift and go to state 101
    lfunc                          shift and go to state 102
    desde                          shift and go to state 104
    repetir                        shift and go to state 105
    mientras                       shift and go to state 106
    cuando                         shift and go to state 107
    regresa                        shift and go to state 108
    asigna                         shift and go to state 109
    imprime                        shift and go to state 110
    imprimenl                      shift and go to state 111
    lee                            shift and go to state 112

state 340

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 346


state 341

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 347


state 342

    (91) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    error           reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 343

    (92) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 92 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    error           reduce using rule 92 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 92 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 92 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 92 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 92 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 344

    (98) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 98 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 345

    (100) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (100) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (101) gposea -> . empty
    (153) empty -> .

    SEA             shift and go to state 319
    OTRO            reduce using rule 153 (empty -> .)
    FIN             reduce using rule 153 (empty -> .)

    gposea                         shift and go to state 348
    empty                          shift and go to state 320

state 346

    (64) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 64 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 64 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 64 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 347

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 349


state 348

    (100) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 100 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 100 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 349

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 350


state 350

    (65) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 65 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 65 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 65 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 13 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 13 resolved as shift
WARNING: shift/reduce conflict for COMA in state 18 resolved as shift
WARNING: shift/reduce conflict for error in state 18 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 30 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 30 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 31 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 31 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 40 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 40 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 43 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 43 resolved as shift
WARNING: shift/reduce conflict for COMA in state 63 resolved as shift
WARNING: shift/reduce conflict for COMA in state 70 resolved as shift
WARNING: shift/reduce conflict for error in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 78 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for error in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 154 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 154 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 155 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 155 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 157 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 157 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 158 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 158 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 158 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 158 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 159 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 159 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 159 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 159 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 160 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 160 resolved as shift
WARNING: shift/reduce conflict for error in state 161 resolved as shift
WARNING: shift/reduce conflict for error in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 170 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 170 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 176 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 176 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 177 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 177 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 178 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 178 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 180 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 180 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 181 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 181 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_TERMINA in state 202 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 221 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 232 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 247 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 247 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 254 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 254 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 254 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 254 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 259 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 259 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 283 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 283 resolved as shift
WARNING: shift/reduce conflict for SINO in state 298 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 302 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 302 resolved as shift
WARNING: reduce/reduce conflict in state 30 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 40 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 40
WARNING: reduce/reduce conflict in state 42 resolved using rule (dimens -> empty)
WARNING: rejected rule (opasig -> empty) in state 42
WARNING: reduce/reduce conflict in state 43 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 63 resolved using rule (gpoidsinner -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 70 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 78 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 95 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 97
WARNING: reduce/reduce conflict in state 133 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (gpovars -> gpoids error TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 135
WARNING: reduce/reduce conflict in state 139 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 146 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 147 resolved using rule (dimens -> empty)
WARNING: rejected rule (opasig -> empty) in state 147
WARNING: reduce/reduce conflict in state 148 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 148
WARNING: reduce/reduce conflict in state 150 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 150
WARNING: reduce/reduce conflict in state 151 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 151
WARNING: reduce/reduce conflict in state 153 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 155
WARNING: reduce/reduce conflict in state 157 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 158 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 159
WARNING: reduce/reduce conflict in state 163 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 163
WARNING: reduce/reduce conflict in state 170 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 170
WARNING: reduce/reduce conflict in state 176 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 176
WARNING: reduce/reduce conflict in state 177 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 180 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 180
WARNING: reduce/reduce conflict in state 181 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 181
WARNING: reduce/reduce conflict in state 221 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 221
WARNING: reduce/reduce conflict in state 247 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 247
WARNING: reduce/reduce conflict in state 254 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 254
WARNING: reduce/reduce conflict in state 259 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 259
WARNING: reduce/reduce conflict in state 283 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 283
WARNING: reduce/reduce conflict in state 301 resolved using rule (estatuto -> empty)
WARNING: rejected rule (bckesp -> empty) in state 301
WARNING: reduce/reduce conflict in state 302 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 302
WARNING: Rule (opasig -> empty) is never reduced
WARNING: Rule (bckesp -> empty) is never reduced
