
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftMULTIDIVleftMODleftOP_RELleftPAREN_EMPIEZAPAREN_TERMINArightCORCHETE_EMPIEZACORCHETE_TERMINAleftFINrightOP_ASIGrightPROTOTIPOSrightPUNTO_COMArightCONSTANTESVARIABLESrightPROCEDIMIENTOFUNCIONleftIDENTINICIOSIMIENTRASCOMA COMENTARIO CONSTANTES CONTINUA CORCHETE_EMPIEZA CORCHETE_TERMINA CTE_ALFA CTE_ENTERA CTE_ENTERA_ERR CTE_REAL CTE_REAL_ERR CTE_REAL_ERR2 CUANDO CUMPLA DE DECR DESDE DIV EL FALSO FIN FIN_ERR FUNCION HACER HASTA IDENT IMPRIME IMPRIMENL INCR INICIO INICIO_ERR INTERRUMPE LEE LIMPIA MAS MENOS MIENTRAS MOD MULTI NO O OP_ASIG OP_REL OTRO PAREN_EMPIEZA PAREN_TERMINA POTENCIA POTENCIA_ERR PROCEDIMIENTO PROGRAMA PROGRAMA_ERR PROTOTIPOS PUNTO PUNTOS_DOBLES PUNTO_COMA QUE REGRESA REPETIR SE SEA SI SINO TIPO TIPO_ERR VALOR VARIABLES VERDADERO Y newlineprogram : constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTOvariables : VARIABLES gpovars\n                     | empty\n        gpovars : gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars\n                   | gpoids PUNTOS_DOBLES TIPO PUNTO_COMA\n        gpovars : emptygpovars : gpoids error TIPO PUNTO_COMA gpovars\n                   | gpoids error TIPO PUNTO_COMA\n        gpovars : gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars\n                   | gpoids PUNTOS_DOBLES error PUNTO_COMA\n        gpoids : IDENT COMA gpoidsinner\n                  | IDENT opasig COMA gpoidsinner\n        gpoids : IDENT dimens COMA gpoidsinner\n                  | IDENT dimens\n        gpoidsinner : IDENT COMA gpoidsinner\n                       | IDENT opasig COMA gpoidsinner\n                       | IDENT\n        gpoidsinner : IDENT dimens COMA gpoidsinner\n                       | IDENT dimens\n        gpoids : emptygpoidsinner : emptygpoids : IDENT dimens error gpoids\n                  | IDENT error gpoids\n                  | IDENT opasig error gpoids\n        dimens : CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimensdimens : emptydimens : CORCHETE_EMPIEZA valor error dimens\n        dimens : error valor CORCHETE_TERMINA dimens\n        opasig : OP_ASIG CTE_ENTERAopasig : OP_ASIG IDENTopasig : emptyvalor : exprlog\n        constantes : CONSTANTES gpoconst\n                      | empty\n        gpoconst : IDENT OP_ASIG CTE_ENTERA PUNTO_COMA\n                    | IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst\n        gpoconst : IDENT OP_ASIG CTE_REAL PUNTO_COMA\n                    | IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst\n                    | empty\n        protfuncproc : PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA\n                        | empty\n        gpofuncproc : protfunc\n                        | protproc\n                        | protproc gpofuncproc\n                        | protfunc gpofuncproc\n                        protfunc : FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMAprotfunc : FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMAprotproc : PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMAprotproc : emptyprotproc : PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA  PUNTO_COMAparams : gpopars PUNTOS_DOBLES TIPO params2params : emptyparams : gpopars PUNTOS_DOBLES error params2\n        params : gpopars error TIPO params2params2 : PUNTO_COMA paramsparams2 : emptygpopars : IDENT COMA gpopars2\n        gpopars : IDENTgpopars2 : IDENT COMA gpopars2\n        gpopars2 : IDENTfuncproc : procedimiento funcproc\n                    | funcion funcproc\n                    | empty\n        procedimiento : PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMAfuncion : FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMAblock : estatuto PUNTO_COMA block\n                 | estatuto PUNTO_COMA\n        block : estatuto error\n                 | estatuto error block\n        estatuto : si\n                    | lfunc\n                    | LIMPIA\n                    | desde\n                    | repetir\n                    | mientras\n                    | cuando\n                    | regresa\n                    | asigna\n                    | imprime\n                    | imprimenl\n                    | lee\n                    | INTERRUMPE\n                    | CONTINUA\n                    | empty\n        si : SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sinosino : SINO bckesp\n                | empty\n        bckesp : estatuto\n                  | INICIO block FIN\n                  | empty\n        desde : DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp\n                 | DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp\n        desde : DESDE EL VALOR DE asigna HASTA expr error bckesprepetir : REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINAmientras : MIENTRAS SE CUMPLA QUE exprlog bckespasigna : IDENT udim OP_ASIG exprlogcuando : CUANDO EL VALOR DE IDENT INICIO gposea otro FINotro : OTRO PUNTOS_DOBLES bckesp\n                | empty\n        gposea : SEA gpoconst PUNTOS_DOBLES bckesp gposea\n        gposea : emptygpoconst : CTE_ALFA gpoconst2gpoconst3 : CTE_ALFA gpoconst2gpoconst2 : COMA gpoconst3gpoconst2 : emptyregresa : REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINAudim : CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim\n                | empty\n        exprlog : opy\n                   | opy O exprlog\n        opy : opno\n               | opno Y opy\n        opno : oprel\n                | NO oprel\n        oprel : expr\n                 | expr OP_REL oprel\n        expr : multi\n                | multi MAS expr\n                | multi MENOS expr\n        multi : expo\n                 | expo MULTI multi\n                 | expo DIV multi\n                 | expo MOD multi\n                 | empty\n        expo : signo\n                | signo POTENCIA expo\n        signo : termino\n                 | MENOS termino\n        termino : IDENT\n                   | CTE_ENTERA\n                   | CTE_REAL\n                   | CTE_ALFA\n                   | VERDADERO\n                   | FALSO\n        termino :\n                   | IDENT udim\n                   | lfunclfunc : IDENT PAREN_EMPIEZA uparams PAREN_TERMINAlfunc : IDENT PAREN_EMPIEZA error PAREN_TERMINAimprime : IMPRIME begin gpoexp PAREN_TERMINAbegin : PAREN_EMPIEZAimprime : IMPRIME error gpoexp PAREN_TERMINAimprime : IMPRIME begin gpoexp errorimprimenl : IMPRIMENL begin gpoexp PAREN_TERMINAimprimenl : IMPRIMENL begin gpoexp errorimprimenl : IMPRIMENL error gpoexp PAREN_TERMINAlee : LEE PAREN_EMPIEZA IDENT PAREN_TERMINAlee : LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINAgpoexp : exprlog\n                  | exprlog COMA gpoexp\n        uparams : exprlog\n                   | exprlog COMA uparams\n        empty :'
    
_lr_action_items = {'CONSTANTES':([0,],[3,]),'VARIABLES':([0,2,3,4,8,10,11,20,22,46,47,96,97,98,165,166,234,295,],[-153,6,-153,-34,-33,-39,-153,-102,-105,-104,-153,-35,-37,-103,-36,-38,6,6,]),'PROTOTIPOS':([0,2,3,4,5,6,7,8,10,11,15,17,20,22,46,47,96,97,98,128,133,134,135,165,166,193,194,195,],[-153,-153,-153,-34,13,-153,-3,-33,-39,-153,-2,-6,-102,-105,-104,-153,-35,-37,-103,188,-5,-10,-8,-36,-38,-4,-9,-7,]),'PROCEDIMIENTO':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,22,24,25,30,31,34,46,47,96,97,98,133,134,135,165,166,193,194,195,238,275,276,310,311,332,346,350,],[-153,-153,-153,-34,-153,-153,-3,-33,-39,-153,27,33,-41,-2,-6,-102,-105,27,27,33,33,-49,-104,-153,-35,-37,-103,-5,-10,-8,-36,-38,-4,-9,-7,-40,-48,-50,-46,-47,340,-64,-65,]),'FUNCION':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,22,24,25,30,31,34,46,47,96,97,98,133,134,135,165,166,193,194,195,238,275,276,310,311,346,347,350,],[-153,-153,-153,-34,-153,-153,-3,-33,-39,-153,28,32,-41,-2,-6,-102,-105,28,28,32,32,-49,-104,-153,-35,-37,-103,-5,-10,-8,-36,-38,-4,-9,-7,-40,-48,-50,-46,-47,-64,349,-65,]),'PROGRAMA':([0,2,3,4,5,6,7,8,10,11,12,14,15,17,20,22,23,24,25,26,46,47,49,50,96,97,98,133,134,135,165,166,193,194,195,217,238,346,350,],[-153,-153,-153,-34,-153,-153,-3,-33,-39,-153,-153,-41,-2,-6,-102,-105,48,-153,-153,-63,-104,-153,-61,-62,-35,-37,-103,-5,-10,-8,-36,-38,-4,-9,-7,249,-40,-64,-65,]),'$end':([1,279,],[0,-1,]),'IDENT':([3,6,27,28,32,33,37,40,41,43,48,66,67,68,69,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,96,97,119,126,127,129,130,131,132,133,134,135,136,139,145,146,148,150,151,152,153,154,155,156,157,158,159,160,163,164,168,169,170,176,177,178,179,180,181,182,197,198,205,206,207,208,209,210,211,212,213,221,233,245,246,247,248,252,254,255,259,278,280,283,284,288,289,291,300,302,313,319,322,327,334,335,338,339,],[9,18,51,52,56,58,63,70,92,95,117,63,18,63,18,-109,-111,-113,95,-115,-117,95,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,9,9,117,183,183,183,183,183,183,18,18,18,63,95,-136,95,95,95,95,-114,95,95,95,-128,95,95,95,95,95,-108,117,117,95,95,95,95,-141,95,95,232,63,63,-110,-112,-116,-118,-119,-121,-122,-123,-126,95,266,-138,-139,95,-153,282,95,285,95,-107,117,95,117,266,117,183,117,95,117,9,117,117,117,117,117,117,]),'CTE_ALFA':([3,21,40,43,78,81,96,97,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,179,180,181,221,247,254,259,283,302,319,],[11,47,87,87,87,87,11,11,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-141,87,87,87,87,87,87,87,87,11,]),'INICIO':([6,7,15,17,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,133,134,135,145,150,151,152,153,154,155,156,157,158,159,160,164,193,194,195,205,206,207,208,209,210,211,212,213,234,245,246,248,254,268,278,280,284,285,295,309,313,327,334,335,338,339,],[-153,-3,-2,-6,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-5,-10,-8,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-4,-9,-7,-110,-112,-116,-118,-119,-121,-122,-123,-126,-153,-138,-139,-153,-135,289,-107,300,300,305,-153,322,300,300,300,300,300,300,]),'PUNTOS_DOBLES':([6,10,11,16,17,18,20,22,37,39,40,42,46,47,63,64,65,66,67,68,69,70,71,73,96,97,98,133,134,135,136,138,140,141,142,143,144,147,149,161,162,165,166,183,185,196,197,198,203,204,214,215,237,239,240,243,244,266,267,306,319,329,331,],[-153,-39,-153,35,-20,-153,-102,-105,-153,-14,-153,-26,-104,-153,-17,-11,-21,-153,-153,-153,-153,-153,-23,-20,-35,-37,-103,-153,-153,-153,-153,-19,-12,-24,-20,-13,-22,-26,-153,-153,-153,-36,-38,-58,235,-15,-153,-153,-28,-26,-25,-27,272,273,274,-16,-18,-60,-57,-59,-153,338,339,]),'error':([6,16,17,18,32,33,35,37,38,39,40,42,43,48,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,123,124,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,168,169,177,179,180,183,185,196,197,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,221,227,228,230,232,235,243,244,245,246,248,251,254,256,257,258,259,260,261,262,263,264,266,267,278,280,284,286,287,289,298,299,300,301,302,304,306,312,313,314,316,317,322,323,324,327,334,335,336,337,342,343,],[-153,36,-20,40,57,59,61,-153,67,-14,-153,-26,-135,-153,-17,-11,-21,-153,-153,-153,-153,40,-23,-20,-32,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-29,-30,162,-124,-129,169,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-153,178,181,-153,-153,-153,-153,-19,-12,-24,-20,-13,-22,-136,200,-26,-135,139,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,139,139,-108,-153,-153,-135,-141,-135,-58,236,-15,-153,-153,-115,-28,-26,-110,-112,-116,-118,-119,-121,-122,-123,-126,-25,-27,-135,258,-149,262,139,270,-16,-18,-138,-139,-153,-96,-135,-106,-140,-143,-135,-142,-144,-145,-146,-147,-60,-57,-107,-153,-153,-150,-148,-153,-153,-88,-153,-84,-135,-95,-59,-85,-153,-87,327,-94,-153,-86,-89,-153,-153,-153,-93,-97,-91,-92,]),'OP_ASIG':([9,18,63,70,117,164,171,248,278,282,],[19,41,41,41,-153,-108,221,-153,-107,-153,]),'COMA':([11,18,38,39,42,47,63,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,137,138,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,177,178,179,180,181,183,201,203,204,205,206,207,208,209,210,211,212,213,214,215,228,245,246,247,248,259,266,278,],[21,37,66,68,-26,21,136,37,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-29,-30,-124,-129,197,198,-136,-135,-26,-153,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-153,-153,-108,-135,-135,-141,-135,-135,233,247,-28,-26,-110,-112,-116,-118,-119,-121,-122,-123,-126,-25,-27,259,-138,-139,-135,-153,-135,288,-107,]),'FIN':([13,29,30,31,34,54,55,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,218,219,221,245,246,248,251,254,256,257,258,260,261,262,263,264,275,276,278,280,284,287,298,299,301,304,305,307,310,311,312,313,314,315,317,318,320,323,324,327,328,330,333,334,335,336,337,338,339,342,343,344,345,348,],[-153,53,-42,-43,-49,-45,-44,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,167,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-67,-68,-110,-112,-116,-118,-119,-121,-122,-123,-126,-66,-69,-135,-138,-139,-153,-96,-135,-106,-140,-143,-142,-144,-145,-146,-147,-48,-50,-107,-153,-153,-148,-153,-88,-84,-95,-153,321,-46,-47,-85,-153,-87,324,-94,-153,-101,-86,-89,-153,337,-99,341,-153,-153,-93,-97,-153,-153,-91,-92,-98,-153,-100,]),'CORCHETE_EMPIEZA':([18,63,70,95,117,149,161,162,232,248,282,],[43,43,148,163,163,43,43,43,43,163,163,]),'CTE_ENTERA':([19,40,41,43,78,81,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,179,180,181,221,247,254,259,283,302,325,326,],[44,85,91,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-141,85,85,85,85,85,85,85,85,334,335,]),'CTE_REAL':([19,40,43,78,81,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,179,180,181,221,247,254,259,283,302,],[45,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-141,86,86,86,86,86,86,86,86,]),'TIPO':([35,36,235,236,272,273,274,],[60,62,269,271,295,296,297,]),'MAS':([40,43,70,73,78,80,81,82,83,84,85,86,87,88,89,90,94,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,163,164,170,176,177,178,179,180,181,210,211,212,213,221,245,246,247,248,254,259,278,283,302,],[-135,-135,-129,-124,-135,154,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-135,-136,-135,-108,-135,-135,-135,-135,-135,-135,-128,-135,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-121,-122,-123,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,-135,]),'MENOS':([40,43,70,73,78,80,81,82,83,84,85,86,87,88,89,90,94,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,163,164,170,176,177,178,179,180,181,210,211,212,213,221,245,246,247,248,254,259,278,283,302,],[81,81,-129,-124,81,155,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,81,-136,81,-108,81,81,81,81,81,81,-128,81,81,81,81,81,-108,81,81,81,81,-141,81,81,-121,-122,-123,-126,81,-138,-139,81,-153,81,81,-107,81,81,]),'OP_REL':([40,43,70,73,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,164,170,176,177,178,179,180,181,202,208,209,210,211,212,213,221,245,246,247,248,254,259,278,283,],[-135,-135,-129,-124,-135,153,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-135,-136,-135,-108,-135,-135,-135,-135,-135,-135,-128,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,153,-118,-119,-121,-122,-123,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,]),'Y':([40,43,70,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,139,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,164,170,176,177,178,179,180,181,202,207,208,209,210,211,212,213,221,245,246,247,248,254,259,278,283,],[-135,-135,-129,-124,151,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-135,-136,-135,-108,-135,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-115,-116,-118,-119,-121,-122,-123,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,]),'O':([40,43,70,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,139,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,164,170,176,177,178,179,180,181,202,206,207,208,209,210,211,212,213,221,245,246,247,248,254,259,278,283,],[-135,-135,-129,-124,150,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-135,-136,-135,-108,-135,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-115,-112,-116,-118,-119,-121,-122,-123,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,]),'CORCHETE_TERMINA':([40,43,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,95,139,145,147,148,150,151,152,153,154,155,156,157,158,159,160,163,164,202,205,206,207,208,209,210,211,212,213,216,245,246,248,278,],[-135,-135,-129,149,-124,-32,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,161,-124,-129,-135,-136,-108,-135,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-135,-108,248,-110,-112,-116,-118,-119,-121,-122,-123,-126,248,-138,-139,-153,-107,]),'NO':([40,43,139,146,148,150,151,170,176,177,178,179,180,181,221,247,254,259,283,],[78,78,78,78,78,78,78,78,78,78,78,-141,78,78,78,78,78,78,78,]),'VERDADERO':([40,43,78,81,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,179,180,181,221,247,254,259,283,302,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-141,88,88,88,88,88,88,88,88,]),'FALSO':([40,43,78,81,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,179,180,181,221,247,254,259,283,302,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-141,89,89,89,89,89,89,89,89,]),'POTENCIA':([40,43,70,78,81,83,84,85,86,87,88,89,90,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,163,164,170,176,177,178,179,180,181,221,245,246,247,248,254,259,278,283,302,],[-135,-135,-129,-135,-135,160,-127,-130,-131,-132,-133,-134,-137,-129,-135,-136,-135,-108,-135,-135,-135,-135,-135,-135,-128,-135,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-135,-138,-139,-135,-153,-135,-135,-107,-135,-135,]),'MULTI':([40,43,70,78,81,82,83,84,85,86,87,88,89,90,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,163,164,170,176,177,178,179,180,181,213,221,245,246,247,248,254,259,278,283,302,],[-135,-135,-129,-135,-135,157,-125,-127,-130,-131,-132,-133,-134,-137,-129,-135,-136,-135,-108,-135,-135,-135,-135,-135,-135,-128,-135,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,-135,]),'DIV':([40,43,70,78,81,82,83,84,85,86,87,88,89,90,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,163,164,170,176,177,178,179,180,181,213,221,245,246,247,248,254,259,278,283,302,],[-135,-135,-129,-135,-135,158,-125,-127,-130,-131,-132,-133,-134,-137,-129,-135,-136,-135,-108,-135,-135,-135,-135,-135,-135,-128,-135,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,-135,]),'MOD':([40,43,70,78,81,82,83,84,85,86,87,88,89,90,95,139,145,146,147,148,150,151,153,154,155,156,157,158,159,160,163,164,170,176,177,178,179,180,181,213,221,245,246,247,248,254,259,278,283,302,],[-135,-135,-129,-135,-135,159,-125,-127,-130,-131,-132,-133,-134,-137,-129,-135,-136,-135,-108,-135,-135,-135,-135,-135,-135,-128,-135,-135,-135,-135,-135,-108,-135,-135,-135,-135,-141,-135,-135,-126,-135,-138,-139,-135,-153,-135,-135,-107,-135,-135,]),'PUNTO_COMA':([44,45,48,60,61,62,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,188,205,206,207,208,209,210,211,212,213,221,241,242,245,246,248,251,254,256,257,258,260,261,262,263,264,269,270,271,278,280,284,287,289,296,297,298,299,300,301,304,312,313,314,317,322,323,324,327,334,335,336,337,340,342,343,349,],[96,97,-153,133,134,135,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,168,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-153,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-153,-153,238,-110,-112,-116,-118,-119,-121,-122,-123,-126,-135,275,276,-138,-139,-153,-96,-135,-106,-140,-143,-142,-144,-145,-146,-147,291,291,291,-107,-153,-153,-148,-153,310,311,-153,-88,-153,-84,-95,-85,-153,-87,-94,-153,-86,-89,-153,-153,-153,-93,-97,346,-91,-92,350,]),'LIMPIA':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[103,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,103,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,103,103,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,103,103,103,103,103,103,103,103,103,103,103,]),'INTERRUMPE':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[113,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,113,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,113,113,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,113,113,113,113,113,113,113,113,113,113,113,]),'CONTINUA':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[114,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,114,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,114,114,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,114,114,114,114,114,114,114,114,114,114,114,]),'SI':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[116,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,116,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,116,116,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,116,116,116,116,116,116,116,116,116,116,116,]),'DESDE':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[118,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,118,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,118,118,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,118,118,118,118,118,118,118,118,118,118,118,]),'REPETIR':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[119,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,119,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,119,119,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,119,119,119,119,119,119,119,119,119,119,119,]),'MIENTRAS':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[120,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,120,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,120,120,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,120,120,120,120,120,120,120,120,120,120,120,]),'CUANDO':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[121,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,121,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,121,121,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,121,121,121,121,121,121,121,121,121,121,121,]),'REGRESA':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[122,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,122,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,122,122,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,122,122,122,122,122,122,122,122,122,122,122,]),'IMPRIME':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[123,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,123,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,123,123,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,123,123,123,123,123,123,123,123,123,123,123,]),'IMPRIMENL':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[124,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,124,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,124,124,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,124,124,124,124,124,124,124,124,124,124,124,]),'LEE':([48,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,119,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,205,206,207,208,209,210,211,212,213,245,246,248,254,278,280,284,289,300,313,322,327,334,335,338,339,],[125,-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,125,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,125,125,-110,-112,-116,-118,-119,-121,-122,-123,-126,-138,-139,-153,-135,-107,125,125,125,125,125,125,125,125,125,125,125,]),'PAREN_EMPIEZA':([51,52,56,57,58,59,70,95,116,117,122,123,124,125,253,],[126,127,129,130,131,132,146,146,170,146,176,179,179,182,283,]),'DE':([53,167,222,225,321,341,],[128,217,252,255,332,347,]),'PAREN_TERMINA':([75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,126,127,129,130,131,132,145,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,170,176,177,178,179,180,181,184,186,187,189,190,191,192,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,220,226,227,228,229,230,231,232,245,246,247,248,259,265,269,270,271,277,278,283,286,290,291,292,293,294,303,308,],[-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-153,-153,-153,-153,-153,-153,-136,-135,-153,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-153,-153,-108,-135,-135,-135,-135,-141,-135,-135,234,-52,237,239,240,241,242,245,246,-151,-28,-26,-110,-112,-116,-118,-119,-121,-122,-123,-126,-25,-27,250,256,257,-149,260,261,263,264,-138,-139,-135,-153,-135,287,-153,-153,-153,-152,-107,-135,-150,-51,-153,-56,-53,-54,317,-55,]),'HASTA':([75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,145,150,151,152,153,154,155,156,157,158,159,160,164,168,169,173,205,206,207,208,209,210,211,212,213,218,219,221,245,246,248,251,278,281,],[-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-67,-68,223,-110,-112,-116,-118,-119,-121,-122,-123,-126,-66,-69,-135,-138,-139,-153,-96,-107,302,]),'SINO':([75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,145,150,151,152,153,154,155,156,157,158,159,160,164,205,206,207,208,209,210,211,212,213,221,245,246,248,251,254,256,257,258,260,261,262,263,264,278,280,284,287,298,299,301,304,312,313,314,317,323,324,327,334,335,336,337,342,343,],[-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-110,-112,-116,-118,-119,-121,-122,-123,-126,-135,-138,-139,-153,-96,-135,-106,-140,-143,-142,-144,-145,-146,-147,-107,-153,-153,-148,313,-88,-84,-95,-85,-153,-87,-94,-86,-89,-153,-153,-153,-93,-97,-91,-92,]),'SEA':([75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,145,150,151,152,153,154,155,156,157,158,159,160,164,205,206,207,208,209,210,211,212,213,221,245,246,248,251,254,256,257,258,260,261,262,263,264,278,280,284,287,298,299,301,304,305,312,313,314,317,323,324,327,334,335,336,337,339,342,343,345,],[-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-110,-112,-116,-118,-119,-121,-122,-123,-126,-135,-138,-139,-153,-96,-135,-106,-140,-143,-142,-144,-145,-146,-147,-107,-153,-153,-148,-153,-88,-84,-95,319,-85,-153,-87,-94,-86,-89,-153,-153,-153,-93,-97,-153,-91,-92,319,]),'OTRO':([75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,145,150,151,152,153,154,155,156,157,158,159,160,164,205,206,207,208,209,210,211,212,213,221,245,246,248,251,254,256,257,258,260,261,262,263,264,278,280,284,287,298,299,301,304,305,312,313,314,317,318,320,323,324,327,334,335,336,337,339,342,343,345,348,],[-109,-111,-113,-135,-115,-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-136,-135,-135,-114,-135,-135,-135,-128,-135,-135,-135,-135,-108,-110,-112,-116,-118,-119,-121,-122,-123,-126,-135,-138,-139,-153,-96,-135,-106,-140,-143,-142,-144,-145,-146,-147,-107,-153,-153,-148,-153,-88,-84,-95,-153,-85,-153,-87,-94,329,-101,-86,-89,-153,-153,-153,-93,-97,-153,-91,-92,-153,-100,]),'DECR':([80,81,82,83,84,85,86,87,88,89,90,94,95,145,154,155,156,157,158,159,160,164,208,209,210,211,212,213,245,246,248,278,302,316,],[-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-136,-135,-135,-128,-135,-135,-135,-135,-108,-118,-119,-121,-122,-123,-126,-138,-139,-153,-107,-135,325,]),'INCR':([80,81,82,83,84,85,86,87,88,89,90,94,95,145,154,155,156,157,158,159,160,164,208,209,210,211,212,213,245,246,248,278,302,316,],[-117,-135,-120,-125,-127,-130,-131,-132,-133,-134,-137,-124,-129,-136,-135,-135,-128,-135,-135,-135,-135,-108,-118,-119,-121,-122,-123,-126,-138,-139,-153,-107,-135,326,]),'EL':([118,121,],[172,175,]),'SE':([120,],[174,]),'VALOR':([172,175,],[222,225,]),'CUMPLA':([174,],[224,]),'QUE':([223,224,],[253,254,]),'PUNTO':([249,],[279,]),'HACER':([250,],[280,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'constantes':([0,],[2,]),'empty':([0,2,3,5,6,11,12,13,18,24,25,30,31,37,40,43,47,48,63,66,67,68,69,70,78,95,96,97,117,119,126,127,129,130,131,132,133,134,135,136,139,146,148,149,150,151,153,154,155,157,158,159,161,162,163,168,169,170,176,177,178,180,181,197,198,221,232,234,247,248,254,259,269,270,271,280,282,283,284,289,291,295,298,300,302,305,313,318,319,322,327,334,335,338,339,345,],[4,7,10,14,17,22,26,34,42,26,26,34,34,65,73,94,22,115,42,65,142,65,142,147,94,164,10,10,164,115,186,186,186,186,186,186,17,17,17,65,94,94,94,204,94,94,94,94,94,94,94,94,204,204,94,115,115,94,94,94,94,94,94,65,65,94,204,7,94,164,94,94,292,292,292,301,164,94,301,115,186,7,314,115,94,320,301,330,10,115,301,301,301,301,301,320,]),'variables':([2,234,295,],[5,268,309,]),'gpoconst':([3,96,97,319,],[8,165,166,331,]),'protfuncproc':([5,],[12,]),'gpovars':([6,133,134,135,],[15,193,194,195,]),'gpoids':([6,40,67,69,133,134,135,],[16,71,141,144,16,16,16,]),'gpoconst2':([11,47,],[20,98,]),'funcproc':([12,24,25,],[23,49,50,]),'procedimiento':([12,24,25,],[24,24,24,]),'funcion':([12,24,25,],[25,25,25,]),'gpofuncproc':([13,30,31,],[29,54,55,]),'protfunc':([13,30,31,],[30,30,30,]),'protproc':([13,30,31,],[31,31,31,]),'opasig':([18,63,70,],[38,137,38,]),'dimens':([18,63,70,149,161,162,232,],[39,138,39,203,214,215,265,]),'gpoconst3':([21,],[46,]),'gpoidsinner':([37,66,68,136,197,198,],[64,140,143,196,243,244,]),'valor':([40,43,139,148,],[72,93,72,93,]),'exprlog':([40,43,139,146,148,150,170,176,177,178,180,181,221,247,254,259,283,],[74,74,74,201,74,205,220,226,228,228,228,228,251,201,284,228,303,]),'opy':([40,43,139,146,148,150,151,170,176,177,178,180,181,221,247,254,259,283,],[75,75,75,75,75,75,206,75,75,75,75,75,75,75,75,75,75,75,]),'opno':([40,43,139,146,148,150,151,170,176,177,178,180,181,221,247,254,259,283,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'oprel':([40,43,78,139,146,148,150,151,153,170,176,177,178,180,181,221,247,254,259,283,],[77,77,152,77,77,77,77,77,207,77,77,77,77,77,77,77,77,77,77,77,]),'expr':([40,43,78,139,146,148,150,151,153,154,155,163,170,176,177,178,180,181,221,247,254,259,283,302,],[79,79,79,79,79,202,79,79,79,208,209,216,79,79,79,79,79,79,79,79,79,79,79,316,]),'multi':([40,43,78,139,146,148,150,151,153,154,155,157,158,159,163,170,176,177,178,180,181,221,247,254,259,283,302,],[80,80,80,80,80,80,80,80,80,80,80,210,211,212,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'expo':([40,43,78,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,180,181,221,247,254,259,283,302,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,213,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'signo':([40,43,78,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,180,181,221,247,254,259,283,302,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'termino':([40,43,78,81,139,146,148,150,151,153,154,155,157,158,159,160,163,170,176,177,178,180,181,221,247,254,259,283,302,],[84,84,84,156,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'lfunc':([40,43,48,78,81,119,139,146,148,150,151,153,154,155,157,158,159,160,163,168,169,170,176,177,178,180,181,221,247,254,259,280,283,284,289,300,302,313,322,327,334,335,338,339,],[90,90,102,90,90,102,90,90,90,90,90,90,90,90,90,90,90,90,90,102,102,90,90,90,90,90,90,90,90,90,90,102,90,102,102,102,90,102,102,102,102,102,102,102,]),'block':([48,119,168,169,289,300,322,],[99,173,218,219,307,315,333,]),'estatuto':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[100,100,100,100,299,299,100,100,299,100,299,299,299,299,299,]),'si':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'desde':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'repetir':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'mientras':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cuando':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'regresa':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'asigna':([48,119,168,169,252,280,284,289,300,313,322,327,334,335,338,339,],[109,109,109,109,281,109,109,109,109,109,109,109,109,109,109,109,]),'imprime':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'imprimenl':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'lee':([48,119,168,169,280,284,289,300,313,322,327,334,335,338,339,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'udim':([70,95,117,248,282,],[145,145,171,278,171,]),'begin':([123,124,],[177,180,]),'params':([126,127,129,130,131,132,291,],[184,187,189,190,191,192,308,]),'gpopars':([126,127,129,130,131,132,291,],[185,185,185,185,185,185,185,]),'uparams':([146,247,],[199,277,]),'gpoexp':([177,178,180,181,259,],[227,229,230,231,286,]),'gpopars2':([233,288,],[267,306,]),'params2':([269,270,271,],[290,293,294,]),'bckesp':([280,284,313,327,334,335,338,339,],[298,304,323,336,342,343,344,345,]),'sino':([298,],[312,]),'gposea':([305,345,],[318,348,]),'otro':([318,],[328,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO','program',10,'p_programa','syntaxanalyzer.py',38),
  ('variables -> VARIABLES gpovars','variables',2,'p_variables','syntaxanalyzer.py',41),
  ('variables -> empty','variables',1,'p_variables','syntaxanalyzer.py',42),
  ('gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars','gpovars',5,'p_gpovars','syntaxanalyzer.py',47),
  ('gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA','gpovars',4,'p_gpovars','syntaxanalyzer.py',48),
  ('gpovars -> empty','gpovars',1,'p_gpovars_empty','syntaxanalyzer.py',63),
  ('gpovars -> gpoids error TIPO PUNTO_COMA gpovars','gpovars',5,'p_gpovars_error','syntaxanalyzer.py',66),
  ('gpovars -> gpoids error TIPO PUNTO_COMA','gpovars',4,'p_gpovars_error','syntaxanalyzer.py',67),
  ('gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars','gpovars',5,'p_gpovars_error2','syntaxanalyzer.py',73),
  ('gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA','gpovars',4,'p_gpovars_error2','syntaxanalyzer.py',74),
  ('gpoids -> IDENT COMA gpoidsinner','gpoids',3,'p_gpoids','syntaxanalyzer.py',80),
  ('gpoids -> IDENT opasig COMA gpoidsinner','gpoids',4,'p_gpoids','syntaxanalyzer.py',81),
  ('gpoids -> IDENT dimens COMA gpoidsinner','gpoids',4,'p_gpoids_dim','syntaxanalyzer.py',89),
  ('gpoids -> IDENT dimens','gpoids',2,'p_gpoids_dim','syntaxanalyzer.py',90),
  ('gpoidsinner -> IDENT COMA gpoidsinner','gpoidsinner',3,'p_gpoids_inner','syntaxanalyzer.py',102),
  ('gpoidsinner -> IDENT opasig COMA gpoidsinner','gpoidsinner',4,'p_gpoids_inner','syntaxanalyzer.py',103),
  ('gpoidsinner -> IDENT','gpoidsinner',1,'p_gpoids_inner','syntaxanalyzer.py',104),
  ('gpoidsinner -> IDENT dimens COMA gpoidsinner','gpoidsinner',4,'p_gpoids_inner_dim','syntaxanalyzer.py',110),
  ('gpoidsinner -> IDENT dimens','gpoidsinner',2,'p_gpoids_inner_dim','syntaxanalyzer.py',111),
  ('gpoids -> empty','gpoids',1,'p_gpoids_empty','syntaxanalyzer.py',119),
  ('gpoidsinner -> empty','gpoidsinner',1,'p_gpoids_inner_empty','syntaxanalyzer.py',122),
  ('gpoids -> IDENT dimens error gpoids','gpoids',4,'p_gpoids_error1','syntaxanalyzer.py',125),
  ('gpoids -> IDENT error gpoids','gpoids',3,'p_gpoids_error1','syntaxanalyzer.py',126),
  ('gpoids -> IDENT opasig error gpoids','gpoids',4,'p_gpoids_error1','syntaxanalyzer.py',127),
  ('dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens','dimens',4,'p_dimens','syntaxanalyzer.py',133),
  ('dimens -> empty','dimens',1,'p_dimens_empty','syntaxanalyzer.py',138),
  ('dimens -> CORCHETE_EMPIEZA valor error dimens','dimens',4,'p_dimens_error1','syntaxanalyzer.py',141),
  ('dimens -> error valor CORCHETE_TERMINA dimens','dimens',4,'p_dimens_error2','syntaxanalyzer.py',147),
  ('opasig -> OP_ASIG CTE_ENTERA','opasig',2,'p_opasig1','syntaxanalyzer.py',153),
  ('opasig -> OP_ASIG IDENT','opasig',2,'p_opasig2','syntaxanalyzer.py',156),
  ('opasig -> empty','opasig',1,'p_opasigEmpty','syntaxanalyzer.py',159),
  ('valor -> exprlog','valor',1,'p_valor','syntaxanalyzer.py',162),
  ('constantes -> CONSTANTES gpoconst','constantes',2,'p_constantes','syntaxanalyzer.py',167),
  ('constantes -> empty','constantes',1,'p_constantes','syntaxanalyzer.py',168),
  ('gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA','gpoconst',4,'p_gpoconst_int','syntaxanalyzer.py',173),
  ('gpoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA gpoconst','gpoconst',5,'p_gpoconst_int','syntaxanalyzer.py',174),
  ('gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA','gpoconst',4,'p_gpoconst_float','syntaxanalyzer.py',188),
  ('gpoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA gpoconst','gpoconst',5,'p_gpoconst_float','syntaxanalyzer.py',189),
  ('gpoconst -> empty','gpoconst',1,'p_gpoconst_float','syntaxanalyzer.py',190),
  ('protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA','protfuncproc',6,'p_prototipo1','syntaxanalyzer.py',205),
  ('protfuncproc -> empty','protfuncproc',1,'p_prototipo1','syntaxanalyzer.py',206),
  ('gpofuncproc -> protfunc','gpofuncproc',1,'p_protfuncproc','syntaxanalyzer.py',211),
  ('gpofuncproc -> protproc','gpofuncproc',1,'p_protfuncproc','syntaxanalyzer.py',212),
  ('gpofuncproc -> protproc gpofuncproc','gpofuncproc',2,'p_protfuncproc','syntaxanalyzer.py',213),
  ('gpofuncproc -> protfunc gpofuncproc','gpofuncproc',2,'p_protfuncproc','syntaxanalyzer.py',214),
  ('protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA','protfunc',8,'p_protfunc','syntaxanalyzer.py',218),
  ('protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA','protfunc',8,'p_protfunc_error1','syntaxanalyzer.py',229),
  ('protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA','protproc',6,'p_protproc','syntaxanalyzer.py',234),
  ('protproc -> empty','protproc',1,'p_protproc_empty','syntaxanalyzer.py',242),
  ('protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA','protproc',6,'p_protproc_error1','syntaxanalyzer.py',245),
  ('params -> gpopars PUNTOS_DOBLES TIPO params2','params',4,'p_params','syntaxanalyzer.py',250),
  ('params -> empty','params',1,'p_params_empty','syntaxanalyzer.py',256),
  ('params -> gpopars PUNTOS_DOBLES error params2','params',4,'p_params_error1','syntaxanalyzer.py',259),
  ('params -> gpopars error TIPO params2','params',4,'p_params_error2','syntaxanalyzer.py',265),
  ('params2 -> PUNTO_COMA params','params2',2,'p_params2','syntaxanalyzer.py',270),
  ('params2 -> empty','params2',1,'p_params2_empty','syntaxanalyzer.py',273),
  ('gpopars -> IDENT COMA gpopars2','gpopars',3,'p_gpopars','syntaxanalyzer.py',276),
  ('gpopars -> IDENT','gpopars',1,'p_gpopars_end','syntaxanalyzer.py',284),
  ('gpopars2 -> IDENT COMA gpopars2','gpopars2',3,'p_gpopars2','syntaxanalyzer.py',289),
  ('gpopars2 -> IDENT','gpopars2',1,'p_gpopars2_end','syntaxanalyzer.py',295),
  ('funcproc -> procedimiento funcproc','funcproc',2,'p_funcproc','syntaxanalyzer.py',300),
  ('funcproc -> funcion funcproc','funcproc',2,'p_funcproc','syntaxanalyzer.py',301),
  ('funcproc -> empty','funcproc',1,'p_funcproc','syntaxanalyzer.py',302),
  ('procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA','procedimiento',12,'p_procedimiento','syntaxanalyzer.py',307),
  ('funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA','funcion',14,'p_funcion','syntaxanalyzer.py',314),
  ('block -> estatuto PUNTO_COMA block','block',3,'p_block','syntaxanalyzer.py',323),
  ('block -> estatuto PUNTO_COMA','block',2,'p_block','syntaxanalyzer.py',324),
  ('block -> estatuto error','block',2,'p_semicolon_error','syntaxanalyzer.py',329),
  ('block -> estatuto error block','block',3,'p_semicolon_error','syntaxanalyzer.py',330),
  ('estatuto -> si','estatuto',1,'p_estatuto','syntaxanalyzer.py',336),
  ('estatuto -> lfunc','estatuto',1,'p_estatuto','syntaxanalyzer.py',337),
  ('estatuto -> LIMPIA','estatuto',1,'p_estatuto','syntaxanalyzer.py',338),
  ('estatuto -> desde','estatuto',1,'p_estatuto','syntaxanalyzer.py',339),
  ('estatuto -> repetir','estatuto',1,'p_estatuto','syntaxanalyzer.py',340),
  ('estatuto -> mientras','estatuto',1,'p_estatuto','syntaxanalyzer.py',341),
  ('estatuto -> cuando','estatuto',1,'p_estatuto','syntaxanalyzer.py',342),
  ('estatuto -> regresa','estatuto',1,'p_estatuto','syntaxanalyzer.py',343),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','syntaxanalyzer.py',344),
  ('estatuto -> imprime','estatuto',1,'p_estatuto','syntaxanalyzer.py',345),
  ('estatuto -> imprimenl','estatuto',1,'p_estatuto','syntaxanalyzer.py',346),
  ('estatuto -> lee','estatuto',1,'p_estatuto','syntaxanalyzer.py',347),
  ('estatuto -> INTERRUMPE','estatuto',1,'p_estatuto','syntaxanalyzer.py',348),
  ('estatuto -> CONTINUA','estatuto',1,'p_estatuto','syntaxanalyzer.py',349),
  ('estatuto -> empty','estatuto',1,'p_estatuto','syntaxanalyzer.py',350),
  ('si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino','si',7,'p_si','syntaxanalyzer.py',355),
  ('sino -> SINO bckesp','sino',2,'p_sino','syntaxanalyzer.py',361),
  ('sino -> empty','sino',1,'p_sino','syntaxanalyzer.py',362),
  ('bckesp -> estatuto','bckesp',1,'p_bckesp','syntaxanalyzer.py',367),
  ('bckesp -> INICIO block FIN','bckesp',3,'p_bckesp','syntaxanalyzer.py',368),
  ('bckesp -> empty','bckesp',1,'p_bckesp','syntaxanalyzer.py',369),
  ('desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp','desde',10,'p_desde','syntaxanalyzer.py',374),
  ('desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp','desde',10,'p_desde','syntaxanalyzer.py',375),
  ('desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp','desde',9,'p_desde_error1','syntaxanalyzer.py',380),
  ('repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA','repetir',7,'p_repetir','syntaxanalyzer.py',385),
  ('mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp','mientras',6,'p_mientras','syntaxanalyzer.py',389),
  ('asigna -> IDENT udim OP_ASIG exprlog','asigna',4,'p_asigna','syntaxanalyzer.py',393),
  ('cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN','cuando',9,'p_cuando','syntaxanalyzer.py',397),
  ('otro -> OTRO PUNTOS_DOBLES bckesp','otro',3,'p_otro','syntaxanalyzer.py',404),
  ('otro -> empty','otro',1,'p_otro','syntaxanalyzer.py',405),
  ('gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea','gposea',5,'p_gposea','syntaxanalyzer.py',410),
  ('gposea -> empty','gposea',1,'p_gposea_empty','syntaxanalyzer.py',416),
  ('gpoconst -> CTE_ALFA gpoconst2','gpoconst',2,'p_gpoconst','syntaxanalyzer.py',419),
  ('gpoconst3 -> CTE_ALFA gpoconst2','gpoconst3',2,'p_gpoconst3','syntaxanalyzer.py',423),
  ('gpoconst2 -> COMA gpoconst3','gpoconst2',2,'p_gpoconst2','syntaxanalyzer.py',427),
  ('gpoconst2 -> empty','gpoconst2',1,'p_gpoconst2_empty','syntaxanalyzer.py',430),
  ('regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA','regresa',4,'p_regresa','syntaxanalyzer.py',434),
  ('udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim','udim',4,'p_udim','syntaxanalyzer.py',438),
  ('udim -> empty','udim',1,'p_udim','syntaxanalyzer.py',439),
  ('exprlog -> opy','exprlog',1,'p_exprlog','syntaxanalyzer.py',444),
  ('exprlog -> opy O exprlog','exprlog',3,'p_exprlog','syntaxanalyzer.py',445),
  ('opy -> opno','opy',1,'p_opy','syntaxanalyzer.py',452),
  ('opy -> opno Y opy','opy',3,'p_opy','syntaxanalyzer.py',453),
  ('opno -> oprel','opno',1,'p_opno','syntaxanalyzer.py',460),
  ('opno -> NO oprel','opno',2,'p_opno','syntaxanalyzer.py',461),
  ('oprel -> expr','oprel',1,'p_oprel','syntaxanalyzer.py',468),
  ('oprel -> expr OP_REL oprel','oprel',3,'p_oprel','syntaxanalyzer.py',469),
  ('expr -> multi','expr',1,'p_expr','syntaxanalyzer.py',476),
  ('expr -> multi MAS expr','expr',3,'p_expr','syntaxanalyzer.py',477),
  ('expr -> multi MENOS expr','expr',3,'p_expr','syntaxanalyzer.py',478),
  ('multi -> expo','multi',1,'p_multi','syntaxanalyzer.py',485),
  ('multi -> expo MULTI multi','multi',3,'p_multi','syntaxanalyzer.py',486),
  ('multi -> expo DIV multi','multi',3,'p_multi','syntaxanalyzer.py',487),
  ('multi -> expo MOD multi','multi',3,'p_multi','syntaxanalyzer.py',488),
  ('multi -> empty','multi',1,'p_multi','syntaxanalyzer.py',489),
  ('expo -> signo','expo',1,'p_expo','syntaxanalyzer.py',496),
  ('expo -> signo POTENCIA expo','expo',3,'p_expo','syntaxanalyzer.py',497),
  ('signo -> termino','signo',1,'p_signo','syntaxanalyzer.py',504),
  ('signo -> MENOS termino','signo',2,'p_signo','syntaxanalyzer.py',505),
  ('termino -> IDENT','termino',1,'p_termino','syntaxanalyzer.py',513),
  ('termino -> CTE_ENTERA','termino',1,'p_termino','syntaxanalyzer.py',514),
  ('termino -> CTE_REAL','termino',1,'p_termino','syntaxanalyzer.py',515),
  ('termino -> CTE_ALFA','termino',1,'p_termino','syntaxanalyzer.py',516),
  ('termino -> VERDADERO','termino',1,'p_termino','syntaxanalyzer.py',517),
  ('termino -> FALSO','termino',1,'p_termino','syntaxanalyzer.py',518),
  ('termino -> <empty>','termino',0,'p_termino2','syntaxanalyzer.py',525),
  ('termino -> IDENT udim','termino',2,'p_termino2','syntaxanalyzer.py',526),
  ('termino -> lfunc','termino',1,'p_termino2','syntaxanalyzer.py',527),
  ('lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA','lfunc',4,'p_lfunc','syntaxanalyzer.py',531),
  ('lfunc -> IDENT PAREN_EMPIEZA error PAREN_TERMINA','lfunc',4,'p_lfunc_error1','syntaxanalyzer.py',537),
  ('imprime -> IMPRIME begin gpoexp PAREN_TERMINA','imprime',4,'p_imprime','syntaxanalyzer.py',542),
  ('begin -> PAREN_EMPIEZA','begin',1,'p_begin','syntaxanalyzer.py',553),
  ('imprime -> IMPRIME error gpoexp PAREN_TERMINA','imprime',4,'p_imprime_error1','syntaxanalyzer.py',562),
  ('imprime -> IMPRIME begin gpoexp error','imprime',4,'p_imprime_error2','syntaxanalyzer.py',567),
  ('imprimenl -> IMPRIMENL begin gpoexp PAREN_TERMINA','imprimenl',4,'p_imprimenl','syntaxanalyzer.py',572),
  ('imprimenl -> IMPRIMENL begin gpoexp error','imprimenl',4,'p_imprimenl_error1','syntaxanalyzer.py',583),
  ('imprimenl -> IMPRIMENL error gpoexp PAREN_TERMINA','imprimenl',4,'p_imprimenl_error2','syntaxanalyzer.py',588),
  ('lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA','lee',4,'p_lee','syntaxanalyzer.py',593),
  ('lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA','lee',5,'p_lee_dim','syntaxanalyzer.py',602),
  ('gpoexp -> exprlog','gpoexp',1,'p_gpoexp','syntaxanalyzer.py',611),
  ('gpoexp -> exprlog COMA gpoexp','gpoexp',3,'p_gpoexp','syntaxanalyzer.py',612),
  ('uparams -> exprlog','uparams',1,'p_uparams','syntaxanalyzer.py',617),
  ('uparams -> exprlog COMA uparams','uparams',3,'p_uparams','syntaxanalyzer.py',618),
  ('empty -> <empty>','empty',0,'p_empty','syntaxanalyzer.py',623),
]
